<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-05-12T17:29:59+09:00</updated><id>/feed.xml</id><title type="html">Tigim Insight</title><subtitle>Life of IT Enthusiast</subtitle><entry><title type="html">투자 지식 정리</title><link href="/how-to-invest" rel="alternate" type="text/html" title="투자 지식 정리" /><published>2021-01-31T00:00:00+09:00</published><updated>2021-01-31T00:00:00+09:00</updated><id>/how-to-invest</id><content type="html" xml:base="/how-to-invest">&lt;p&gt;잘난 것도, 자랑 할 것도 많지 않은 인생에서 그나마 어디가서 구박(?) 안 당하는 이유가 무엇일까 곰곰히 생각해 보니, 나름의 투자 성공이 아니었을까 생각해 본다. 아직도 진행 중이기에 완전한 성공이라고 말하기에 섣부른 감이 있다만, 나중에라도 복기할 수 있게 정리해 본다. 사실, 누가 좀 알려달라기에 ㅎㅎㅎㅎ&lt;/p&gt;

&lt;h1 id=&quot;투자의-시작&quot;&gt;투자의 시작&lt;/h1&gt;

&lt;p&gt;무슨 일이든 가장 많이 듣게 되는 질문은 &lt;strong&gt;어떻게 시작 해야 하나?&lt;/strong&gt; 일 것이다. 투자의 세계에서도 마찬가지인데, 이건 각 자의 사정이 다 틀리기 때문에 어떻게 시작 하자 라고 말하긴 어렵다. 다만 불변의 진리라면 투자할 무엇인가를 확보해야 하는 것이다. 돈이 되든, 시간이 되든, 몸이든 투자라는 것이 내가 가지고 있는 것을 넣어서 그로부터 발생하는 멀티플 수익을 기대하는 것이다. 그게 아니라면 &lt;strong&gt;사기&lt;/strong&gt;!!! ㅎ&lt;/p&gt;

&lt;h1 id=&quot;투자-시드-확보&quot;&gt;투자 시드 확보&lt;/h1&gt;

&lt;p&gt;내 경우를 들어다 보면, 일단 투자를 해야겠다고 마음 먹은 순간부터 돈을 모았다. 원래 돈 쓰는 것을 꺼려하는 성격이라서 크게 힘들이지 않고 급여를 차곡차곡 저금 했다. 월 200만원씩 저금하면, 4년 정도면 모은다. 운이 좋아서 좋은 회사에 다니고 있다면, 연말 두둑한 상여금으로 그 기간이 좀 더 단축이 된다. 일단, 안 쓰는 것이 방법이다. 참고로 부자가 되는 2가지 습관 중 하나는 무분별한 소비를 자제하는 것이란다.&lt;/p&gt;

&lt;h1 id=&quot;투자-상품-탐색&quot;&gt;투자 상품 탐색&lt;/h1&gt;

&lt;p&gt;억 단위의 돈이 모였다면, 이제 투자 상품을 찾아보자. 베이비부머 세대처럼 고금리(~25%) 세상에 살았다면 그냥 은행에 맡기면 되겠지만, 최근 10년을 돌아보면 2% 이자 예금 상품 찾기도 만만치 않다. 거기서 세금 떼고 나면, 인플레이션도 쫒아가지 못하는 수익에 절망 만 쌓일 것이다. 현재의 많은 월급(?)에 취해 투자를 미루면 미룰수록 말년의 고통은 더욱 더 가중 될 것이다.&lt;/p&gt;

&lt;p&gt;어째든, 일반인에게 투자 상품은 매우 제한적이다. 부동산 아니면 주식이다. 코인, 예술품, 오래된 술, 게임 아이템 등 많고 많은 투자 상품이 있지만, 말그대로 &lt;strong&gt;일.반.인&lt;/strong&gt;에게는 너무 큰 위험이 따르기 때문에 2가지에 압축해서 정리한다.&lt;/p&gt;

&lt;h1 id=&quot;투자란&quot;&gt;투자란?&lt;/h1&gt;

&lt;p&gt;세상에는 많은 투자 책과 셀럽이 있다. 하지만, 딱 한 가지만 기억하면 된다. &lt;strong&gt;좋은 상품을 싸게 사서 보유&lt;/strong&gt;하는 것이다. “좋은” 과 “싸게”에만 집중하자. 예를 들자면, 부동산의 경우는 “입지 = 좋은” 이라고 단연코 말할 수 있다. 그러면 좋은 입지란 무엇일까? 나라 별로 조금씩 틀린데, 우리나라는 강남, 한강변, 바닷가, 초품아, 교통요지 등이 될 것이다. “싸게”란 본래의 가치보다 저 평가된 시기의 가격을 말한다. 보통 말하는 10년의 공식이 있다. 이 게 딱 맞는다고 말 할 수 없지만, 모든 것이 시계열 상에서 상승과 하락의 사이클 운동을 한다고 봤을 때, 하락의 정점에서 투자를 고려하면 좋을 것이다. 내 경우를 봐도, 부동산은 10년 단위로만 매매를 했다.&lt;/p&gt;

&lt;h1 id=&quot;부동산-투자&quot;&gt;부동산 투자&lt;/h1&gt;

&lt;p&gt;이번 매매 직전 나는 더 하락할 것으로 예상했지만, 상황에 맞추어 생각을 바꾸었는데 그것이 신의 한수가 되었다.&lt;/p&gt;

&lt;p&gt;그러면, 나는 생각을 어떻게 바꾸었을까? 간단하다. 1년 간 내 예상대로 움직이지 않는 시장을 보며, 상승을 전제로 세상을 다시 살펴 본 것이다. 그런 시뮬레이션의 결과, 하락 보다는 모든 면에서 상승의 가능성이 더 컸다. 그리고선 1달 만에 집을 계약 했다.&lt;/p&gt;

&lt;p&gt;입지를 고르는 가장 큰 조건은 초품아 또는 초품아 수준의 지역이었다. 맞벌이에 두 초등 아이가 있는 집에서는 가장 중요한 조건이 아닐 수 없다. 더해서 집 값이 떨어지지 않는 지역이면서, 출퇴근의 문제가 없는 곳으로 선정 했다. 한 마디로 대한민국에 사는 30-40대 부부가 가장 살고 싶은 지역으로 골랐다.&lt;/p&gt;

&lt;p&gt;총 투자 금액은 억 단위가 조금 넘는 수준이었고, 이후 결과는 현재 이 글을 쓰는 시점에서 만족 할 만한 수준이다. 그 때 조금 더 여러 동네를 돌아봤으면 하는 지난 후회가 있지만, 투자는 “쌀 때” 해야하는 철칙에 비추어 보면 적절한 순간의 매수라고 할 수 있을 것 같다. 생각의 전환과 빠른 실행이 이끈 작은 성공이었다. 10년 전 투자 때는 “초품아”에만 집중 했는데, 이번에 다른 요소까지 고려하다 보니, 비슷한 투자 금액으로 더 높은 수익률을 만들었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[정리]&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;부동산은 입지가 생명이다.&lt;/li&gt;
  &lt;li&gt;10년 주기설이 믿을 것이 못되지만, 최소한 상승과 하락의 주기가 있다는 것은 인정하자. 그리고, 기다리자.&lt;/li&gt;
  &lt;li&gt;비단 부동산 투자 뿐만 아니라, 모든 투자에 해당 되는데, 자신의 생각과 다르게 세상이 움직인다면 스탠스 변경에 대해 한번 쯤은 고민해 보자. 30먹은 사람이 자기 생각 바꾸기가 지구 자전축 바꾸는 것 보다 어렵다는 건 알고 있다. 하지만, 10년을 허비하고 싶지 않다면 꼭 고려해야 한다.&lt;/li&gt;
  &lt;li&gt;(덧붙임) 주택 보유 없이 전세로만 살고 있다는 것은 시장에서 풋 포지션이다. 이 말을 최소한 이해하고 있자!!!&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;주식-투자&quot;&gt;주식 투자&lt;/h1&gt;

&lt;p&gt;이런 불꽃 장에서 수익률이 10%도 안 된다면, 솔직히 하수라고 보는 것이 맞을 것 같다. 누굴 가르칠 처지가 아닌 것이다. 다만, 4년 전 유명 주식 셀럽의 말만 듣고 투자한 종목에 물려 있어서 수익률이 낮을 뿐이지 최근 투자는 나쁘지 않다.&lt;/p&gt;

&lt;p&gt;암튼, 주식은 지식적으로나 투자의 대한 자세 측면에서 많은 것을 가져다 주었다. 주식 투자는 돈을 모으자고 마음 먹기 전, 회사에서 너무 심심해서 시작하게 되었는데, 그 때는 뭣도 모르고 하는 바람에 손실이 꽤 컸었다. 지금 돌이켜보면 그 때의 실패가 큰 자산이 된 것 같다. 요즘은 목에 칼이 들어와도 잡주, 테마주 등은 하지도 쳐다보지도 않는다.&lt;/p&gt;

&lt;p&gt;주식은 여전히 배움의 과정에 있는데, 현재 내 입장에서는 큰 리스크를 어떻게 하면, 줄일 수 있을까에 초점을 맞추고 있다. 즉 잃지 않는 투자에 집중한다. 그러기 위헤서, 1) 종목은 “ETF”에 한정해서 투자를 하고, 2) 거래량이 나의 최대 매수 가능 금액을 감당할 수 있는 수준이며, 3) 60주선 이상에서 노는 종목만 쳐다본다.&lt;/p&gt;

&lt;p&gt;메인 수익은 부동산으로 올리고, 주식은 곁가지도 정도로 생각하기 때문에 희망 년 평균 수익률은 20-30%정도 생각한다. 대신, 위에서도 말했지만 세상의 흐름과 변화를 느끼는 가장 중요한 수단이라고 보면 될 것 같다.&lt;/p&gt;

&lt;p&gt;덧 붙여서, 자동매매에도 관심이 있어서 1주로 KODEX 코스닥150 레버리지를 테스트 해보고 있는데 나름 수익이 좋다. 요걸로 한 달 평균 50-100만원 정도 만들수 있지 않을까 연구하는 중인데, 나중에 정리가 가능하면 포스팅 할 예정이다. 알고리즘은 자동매매로 검색 해 보면 보통 나오는 변동성돌파전략이다. 항상 잘 되는 것이 아니라서 암흑기(지속 손실 구간)를 어떻게 극복 하느냐가 제일 큰 문제다. 지금은 1주를 사고 팔기 때문에 자연스럽게 극복이 된다. ㅎㅎ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[정리]&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;나만의 투자 원칙 만들어서 지키려고 한다.&lt;/li&gt;
  &lt;li&gt;벼락부자는 바라지 않는다. 시장 상회 수익률이 목표다.&lt;/li&gt;
  &lt;li&gt;1주라도 가지고 있으면서, 시장을 관찰한다. 시장에 있는 것만으로도 경제 지식이 쌓인다.&lt;/li&gt;
  &lt;li&gt;자동매매도 현재는 취미 수준으로 해보고 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;참고-사이트&quot;&gt;참고 사이트&lt;/h1&gt;

&lt;p&gt;이런 지식을 공대생이 어찌 혼자 독고다이로 체득 했겠는가? 몇 몇 참고하는 현인의 링크도 올려두니 참고하면 좋을 듯!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/ondal0404&quot;&gt;얼티메이텀의 거꾸로보는 경제&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://deathornot.tistory.com/&quot;&gt;lovefund이성수의 평지풍파 금융사&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/hong8706&quot;&gt;홍춘욱 이코노미스트&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCJXg2M-xwdIk8Sgg1irjaHA&quot;&gt;상승미소의 경제와투자&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jong Yoon Kim</name></author><category term="life" /><summary type="html">잘난 것도, 자랑 할 것도 많지 않은 인생에서 그나마 어디가서 구박(?) 안 당하는 이유가 무엇일까 곰곰히 생각해 보니, 나름의 투자 성공이 아니었을까 생각해 본다. 아직도 진행 중이기에 완전한 성공이라고 말하기에 섣부른 감이 있다만, 나중에라도 복기할 수 있게 정리해 본다. 사실, 누가 좀 알려달라기에 ㅎㅎㅎㅎ</summary></entry><entry><title type="html">WebRTC와 ReactJS</title><link href="/webrtc_and_reactjs" rel="alternate" type="text/html" title="WebRTC와 ReactJS" /><published>2020-05-13T00:00:00+09:00</published><updated>2020-05-13T00:00:00+09:00</updated><id>/webrtc_and_reactjs</id><content type="html" xml:base="/webrtc_and_reactjs">&lt;p&gt;WebRTC와 ReactJS를 활용한 모바일 로봇 조이스틱 웹앱 프로젝트 정리&lt;/p&gt;

&lt;h1 id=&quot;background&quot;&gt;Background&lt;/h1&gt;

&lt;p&gt;전부터 불만이었던 유저 인터페이스를 개선해보고자 최대한 간단한 형태의 모바일 로봇용 조이스틱 프로그램을 개발 하기로 했다. 목표는 최대한 간단하며, 심플하고 매우 직관적이어야 한다는 것이다. 그래서 생각한 것이 FPV 형태의 모바일 게임 인터페이스 였다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;디자인 상세&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;백그라운드는 로봇이 이동하는 방향의 카메라 영상&lt;/li&gt;
  &lt;li&gt;조이스틱은 360도 모든 방향을 지원하며, 속도 표현도 가능&lt;/li&gt;
  &lt;li&gt;다른 기능은 Switch Button을 이용&lt;/li&gt;
  &lt;li&gt;로봇에 네트워크 스위치가 있기 때문에 보안을 위한 추가 기능(eg. 로그인 프로세스)은 배제&lt;/li&gt;
  &lt;li&gt;사용자의 모바일 기기에서 추가적인 설치 없이 사용 가능&lt;/li&gt;
  &lt;li&gt;개발 기간은 1달 이내&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위의 요구 사항을 기반으로 진행을 했으며, 가능한 심플하게 구현해 보았다. 자세한 소스코드는와 설치는 깃허브  &lt;a href=&quot;https://github.com/supertigim/video_streaming_on_web&quot;&gt;github.com/supertigim/video_streaming_on_web&lt;/a&gt;에 올려 두었다.&lt;/p&gt;

&lt;h1 id=&quot;architecture&quot;&gt;Architecture&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/supertigim/video_streaming_on_web/raw/master/data/video_streaming_system_architecture.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;전체 구조는 간단하다. 일반적인 웹앱의 형태로 구성했고, 백엔드 WebRTC 시그널링을 위해 좀 더 친숙한 Python을 사용했다. 정확히 표현하자면, 자바스크립트로는 뭐를 못하겠다.&lt;/p&gt;

&lt;h1 id=&quot;tech-stack&quot;&gt;Tech Stack&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;ReactJS&lt;/li&gt;
  &lt;li&gt;ReactRTC (정확히는 수정하여 사용)&lt;/li&gt;
  &lt;li&gt;AioHttp&lt;/li&gt;
  &lt;li&gt;AioRTC&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;details&quot;&gt;Details&lt;/h1&gt;

&lt;p&gt;자세한 내용은 코드를 보면 대부분 이해가 될 것 이고, 어렵지 않게 구현을 하였다. 물론 기본적인 WebRTC의 개념과 ReactJS의 동작 원리를 알고 있으면 좀더 쉬울 것이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebRCT Signalling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이부분이 진행하기 제일 어려웠다. 무엇보다 프로토콜을 분석할 만한 시간적인 여유가 없었기 때문에 동작 원리를 정확히 이해하지 못하고 시작한게 어려움의 가장 큰 이유가 아니었나 생각한다. 결국 하다보니 어찌어찌 완성은 했는데, 고생한 건 분명하다. ㅎㅎㅎ 이해 하는데 가장 도움이 되었던 것은 ReactRTC의 소스 코드 였고, 이에 맞춰서 시그널링 서버를 구축했다. 그리고, AioRTC의 예제도 많이 참고 하였는데, 이부분도 테스트를 위해 살려두었다. 결국 시스템은 AioRTC의 예제와 ReactRTC를 모두 지원하게 되었다.&lt;/p&gt;

&lt;p&gt;웹 시그널링을 위한 통신 방법은 여러가지 있는데, AioRTC 예제는 REST API, ReactRTC에서는 WebSocket을 이용했다. 리액트에서도 REST API로 처리하려 했으나, 아시다시피 포트가 틀리면 처리해 줘야 하는 다른 어려움이 있어 WebSocket을 사용하기로 했는데 이또한 Security 이슈가 있어 결국 HTTPS로 설정하여 해결했으며, 과정이 꽤 험난했다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Front-end with ReactJS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;개인 취미로 몇가지 테스트 해본게 전부인, ReactJS를 건드린 것도 처음엔 일이었다. 하지만, 진행 하면서 느낀건 약간 레고 블럭 쌓는 느낌이라고 해야 할까? 크게 프로그래밍적인 어려움은 없고 그냥 좀 갑갑한 기분이 든 정도? ㅎㅎㅎ 동시에 프론트-엔트 개발자들이 이런 언어로 어떻게 개발을 진행할 수 있는지 약간 의문이 들었다. 어째든, Render() 함수에 모든걸 때려(?)넣고, 필요한 모듈은 임포트 했고, 중요한 ReactRTC 모듈은 수정이 불가피해서 임포트하지 않고 직접 수정을 했다. 아마 경험이 많으면 이부분도 방법이 있겠지만, 현재는 관심 없고, 앞으로도 없을듯 해서 패스!&lt;/p&gt;

&lt;p&gt;중요한 모듈은 Joystick GUI를 위한 &lt;a href=&quot;https://github.com/loopmode/react-nipple&quot;&gt;react-nipple&lt;/a&gt;가 다이고, 배경으로 스트리밍 이미지를 넣는건 미디엄의 한 &lt;a href=&quot;https://medium.com/@Rayyan995/how-to-make-a-background-video-component-in-react-8725e32da272&quot;&gt;블로그&lt;/a&gt;에서 도움 받았다. 관련된 간단한 예제는 &lt;a href=&quot;https://github.com/Rayyan995/background-video/tree/master/src/components/BackgroundVideo&quot;&gt;github.com/Rayyan995/background-video/tree/master/src/components/BackgroundVideo&lt;/a&gt;에 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Difficulties&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;stun server: 두 peer통신을 위한 중계 역할을 하는 서버인데, 이걸 인터넷과 연결되지 않은 독립 네트워크에 어떻게 구현해야 하나 고민이 많았다. 결론은 쓸 필요가 없다. Negotiation 프로세스에서 ICE Candidate를 전달해 주니 자연스럽게 해결. ㅋ&lt;/li&gt;
  &lt;li&gt;Security &amp;amp; HTTPS: Web 표준을 제정하는 사람들의 고민이 느껴지는 부분이다. 덕분에 나만 고생했지만! 어째든 WebRTC와 WebSocket을 정상적으로 사용하려면 무조건 HTTPS로 연결 되어야 한다. 이거 안해주면, 그냥 이상하게 안됨 ㅎㅎㅎㅎㅎ&lt;/li&gt;
  &lt;li&gt;Browswer: 이미 만들어진 브라우저를 욕해봐야 무얼하리오! ㅎㅎㅎ 아시다시피 MS에서 나온 브라우져들은 웹 표준을 제대로 따르지 않기 때문에 WebRTC가 정상 동작하지 않는다. 다른 브라우저들은 괜찮다. 한가지 알아 둘것은 iOS에서는 오직 &lt;strong&gt;사파리&lt;/strong&gt;만 WebRTC를 지원한다. OS레벨에서 디바이스 장치에 연결하는 API를 제공하지 않아 설치한 다른 브라우저에서는 쓸 수 없다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;result&quot;&gt;Result&lt;/h1&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Lm0EJ54ANJs&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;이렇게 잘 동작하는게 결론이다. 더 프로젝트를 진행 했으면 좋으련만 Covid-19으로 모든 것이 물거품이 되었고, 나는 다른 세계로 옮겨져 버렸다. ㅎㅎㅎㅎㅎ&lt;/p&gt;</content><author><name>Jong Yoon Kim</name></author><category term="technology" /><summary type="html">WebRTC와 ReactJS를 활용한 모바일 로봇 조이스틱 웹앱 프로젝트 정리</summary></entry><entry><title type="html">IT 관련 잡다한 지식 정리</title><link href="/IT-knowledge" rel="alternate" type="text/html" title="IT 관련 잡다한 지식 정리" /><published>2020-03-18T00:00:00+09:00</published><updated>2020-03-18T00:00:00+09:00</updated><id>/IT-knowledge</id><content type="html" xml:base="/IT-knowledge">&lt;p&gt;Job Interview를 위한 System Architecture 및 Cloud Service에 대한 정리&lt;/p&gt;

&lt;h1 id=&quot;technical-part&quot;&gt;Technical Part&lt;/h1&gt;

&lt;h3 id=&quot;웹서비스-or-일반-지식&quot;&gt;웹서비스 or 일반 지식&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Describe how HTTPS works&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name five Linux commands that have five or more letters :compress/uncompress, netstat, cksum, hostname, crontab, alias, chown, chmod, touch, whoami, reboot&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is a LAMP stack? : Linux operating system, the Apache HTTP Server, the MySQL relational database management system, and the PHP programming language.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Describe a web application and all of its components.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is continuous integration? -&amp;gt; (Follow-up 1.) What CI/CD tools have you used? (Follow-up 2.) What are the benefits of CI/CD?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;How does a web server authenticate to a database?&lt;/li&gt;
  &lt;li&gt;What is the port for DNS, HTTP, Telnet, etc?&lt;/li&gt;
  &lt;li&gt;What is SOAP? What about REST?&lt;/li&gt;
  &lt;li&gt;Describe what happens from minute you request for a URL\site, until you get the response back.&lt;/li&gt;
  &lt;li&gt;Explain what is DNS?&lt;/li&gt;
  &lt;li&gt;What are some examples of DNS record types?&lt;/li&gt;
  &lt;li&gt;How do you stop apache service?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;네트워크&quot;&gt;네트워크&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Difference between broadcast, multicast and unicast&lt;/li&gt;
  &lt;li&gt;TCP Model&lt;/li&gt;
  &lt;li&gt;TCP vs UDP -&amp;gt; (Follow-up 1.) Use cases (Follow-up 2.) What newer technologies would use UDP&lt;/li&gt;
  &lt;li&gt;What is the difference between network Layer 2 and 3?&lt;/li&gt;
  &lt;li&gt;Difference between IOPS, Throughput, and Latency&lt;/li&gt;
  &lt;li&gt;Describe what happens at Layer 2&lt;/li&gt;
  &lt;li&gt;Difference between QOS and bandwidth control&lt;/li&gt;
  &lt;li&gt;WAN optimization&lt;/li&gt;
  &lt;li&gt;What’s a CIDR block and when would you use it?&lt;/li&gt;
  &lt;li&gt;What if MPLS? (다중 프로토콜 레이블 스위치)[https://blog.naver.com/yoodh0713/221577551875]&lt;/li&gt;
  &lt;li&gt;Is VOIP UDP or TCP? (Answer) mosly UDP, SIP and RTP on UDP are used for VoIP&lt;/li&gt;
  &lt;li&gt;Types of load balancers. Load balancer L3 and L5.&lt;/li&gt;
  &lt;li&gt;How does a Load Balancer Work?&lt;/li&gt;
  &lt;li&gt;Which algorithm does an Elastic Load Balancer use? (Answer) hash routing, round robin routing&lt;/li&gt;
  &lt;li&gt;router - L3 &amp;amp; switch - L2 &amp;amp; Load Balancer - L4&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;보안--해킹&quot;&gt;보안 &amp;amp; 해킹&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Explain difference between asymmetric and symmetric crypto with some use cases (Answer) Encryption algorithms are either symmetric or asymmetric. Symmetric encryption uses the same secret key to perform both the encryption and decryption processes. Asymmetric encryption, also known as public-key encryption, uses two keys, a public key for encryption and a corresponding private key for decryption. The public key and private key are mathematically related so that when the public key is used for encryption, the corresponding private key must be used for decryption. AWS KMS uses only symmetric encryption.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;What is the difference between an IPSec and an SSL VPN?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How would you mitigate a DOS? (Answer) Buffer overflow attacks / Ping of Death or ICMP flood / SYN flood / Teardrop Attack&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;What is identity management?&lt;/li&gt;
  &lt;li&gt;How do you secure a web site?&lt;/li&gt;
  &lt;li&gt;Where are customer encryption keys stored?&lt;/li&gt;
  &lt;li&gt;What’s a Web Application Firewall? (Follow-up 1.) How’s it differ from a firewall?&lt;/li&gt;
  &lt;li&gt;Stateful and stateless Firewall (Answer) &lt;a href=&quot;https://www.solarwindsmsp.com/blog/stateful-vs-stateless-firewall-differences&quot;&gt;diffrence between two&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;What is a Bastion host?: &lt;a href=&quot;http://egloos.zum.com/genes1s/v/3092290&quot;&gt;NAT GW vs Basition Host&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;What is DOS/DDOS and how to mitigate this&lt;/li&gt;
  &lt;li&gt;What is a web application firewall and how do you use it, what layer is it on?&lt;/li&gt;
  &lt;li&gt;How do you secure a web site?&lt;/li&gt;
  &lt;li&gt;Explain public/private key encryption&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are reasons you would hash a file?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;IPS/IDS: (Answer 1.) IDS - Intrusion Detection System - very much like a CCTV camera at the entrace. Is a passive system that scans incoming traffic. Once the IDS identifies dangerous/suspicious traffic, it sends alerts to IPS (Answer 2.) IPS - Intrusion Prevention System - actively blocks or prevent intrusions. Once unwelcomed packets are identified, IPS puts them in quarantine or drops them. (Answer 3.) IDS and IPS are not 2 different physical devices. Combined into next generation firewalls.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is Federation?(Answer) Federation is a collection of domains that have established trust. The level of trust may vary, but typically includes authentication and almost always includes authorization. A typical federation might include a number of organizations that have established trust for shared access to a set of resources.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Encryption at rest/in transit (Answer) Password encrypted in DB / HTTPS or SSL&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Asymmetric key encryption was introduced to complement the inherent problem of the need to share the same key in symmetrical encryption model, eliminating the need to share the same key by using a pair of public/private keys.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;확장성&quot;&gt;확장성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;How would you scaling this type of application?&lt;/li&gt;
  &lt;li&gt;What else would you do for a high volume distributed app web site?&lt;/li&gt;
  &lt;li&gt;Discuss durability vs availability&lt;/li&gt;
  &lt;li&gt;Difference between horizontal and vertical scaling (Answer 1.) Horizontal: when you add or remove servers. (Answer 2.) Vertical: When you upscale or downscale a server (i.e. add/remove more CPU or memory)  (Follow-up Q) Why is it hard to horizontally scale a SQL database?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;빅데이터--데이터베이스--스토리지&quot;&gt;빅데이터 &amp;amp; 데이터베이스 &amp;amp; 스토리지&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Most common mistakes in DB - &lt;a href=&quot;https://dzone.com/articles/9-of-the-most-common-mistakes-in-database-design&quot;&gt;Answer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;In what situations would you want to use a NoSQL database vs. a relational database?&lt;/li&gt;
  &lt;li&gt;Explain how datalake is used for&lt;/li&gt;
  &lt;li&gt;What are the RAID levels (Follow-up 1.) Which one would a DB use? (Follow-up 2.) Is S/W or H/W?&lt;/li&gt;
  &lt;li&gt;RAID 10 vs RAID 01 - &lt;a href=&quot;https://blog.naver.com/dilector/221786444049&quot;&gt;RAID 설명&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Discuss SSD vs traditional disk&lt;/li&gt;
  &lt;li&gt;What are SQL databases good for?&lt;/li&gt;
  &lt;li&gt;What are NoSQL databases good for?&lt;/li&gt;
  &lt;li&gt;How can a database be scaled?&lt;/li&gt;
  &lt;li&gt;What is database indexing and why is it important&lt;/li&gt;
  &lt;li&gt;Difference between object storage and file system&lt;/li&gt;
  &lt;li&gt;What ports do databases use?&lt;/li&gt;
  &lt;li&gt;How would you monitor utilization of equipment in a datacenter&lt;/li&gt;
  &lt;li&gt;Different types of storage&lt;/li&gt;
  &lt;li&gt;What is a CDN? (Follow-up) How does a CDN make web sites faster (Follow-up) Why is it important who would setup the CDN?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why you should use a CDN for a object with a zero TTL? (Answer) a 0 TTL results in a client making an If Modified Since request, hence if the content has not be modified, it will be served from the local cache. If the content has no-cache, it will be fetched everytime regardless of it being expired or not.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is difference between cluster and mirroring (Answer 1.) Mirroring, described Mirroring, is the mechanism by which a single database server maintains a copy of a specific dbspace on a separate disk. This mechanism protects the data in mirrored dbspaces against disk failure because the database server automatically updates data on both disks and automatically uses the other disk if one of the dbspaces fails. (Answer 2.) Alternatively, a cluster duplicates on an entirely separate database server all the data that a database server manages, not just the specified dbspaces. Because clustering involves two separate database servers, it protects the data that these database servers manage, not just against disk failures, but against all types of database server failures, including a computer failure or the catastrophic failure of an entire site.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;DAS vs NAS vs SAN&lt;/li&gt;
  &lt;li&gt;Differene between OLTP and DW&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How will you improve the performance of a database? (Answer) add normalization technique.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is Sharding? (Answer) Partition of a huge database into smaller databases in order to gain performance and managebility. Sharding is a method of splitting and storing a larger dataset in multiple databases. Sharding is necessary if a dataset is too large to be stored in a single database. By distributing the data among multiple machines, a cluster of database systems can store larger dataset and handle additional requests.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is De-Duplication in storage? (Answer) Data deduplication is a specialized data compression technique for eliminating duplicate copies of repeating data and reduces storage overhead. Data deduplication techniques ensure that only one unique instance of data is retained on storage media, such as disk, flash or tape. This is also one of the &lt;strong&gt;WAN optimization&lt;/strong&gt; techniques&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;What is a database caching server?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;클라우드-기술--가상화&quot;&gt;클라우드 기술 &amp;amp; 가상화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;What is cloud computing?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What tools have you used for infrastructure monitoring?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the top 3 most important aspects of SaaS? (Answer 1.) First, location for clients. Being able to access the software with the least amount of latency is critical. (Answer 2.) Second is security, address PCI, HIPAA, SOC, etc is going to be a concern when clients who maybe competitors use the same software. (Answer 3.) Third is scalability, if you can’t handle the growth of new customers and maybe their clients you won’t have a product worth scaling and instead increasing the management overhead.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;What is MSA?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is “MQTT”?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;What is Virtualization? the basic concepts and terms of virtualization&lt;/li&gt;
  &lt;li&gt;What is a Hypervisor and how does it work to distinguish multiple VMs running on it and isolate them from the underlying h/w?&lt;/li&gt;
  &lt;li&gt;What is Docker? How does it work?&lt;/li&gt;
  &lt;li&gt;hadoop - explain map-reduce&lt;/li&gt;
  &lt;li&gt;hypervisor&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;시스템-디자인--최적화&quot;&gt;시스템 디자인 &amp;amp; 최적화&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Design a HA solution: &lt;a href=&quot;https://docs.rightscale.com/cm/designers_guide/cm-designing-and-deploying-high-availability-websites.html&quot;&gt;참고&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Describe how you would build a Content Delivery Network (CDN) from scratch by coding it&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Design fault tolerant, load balanced video stream service&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Design an e-commerce web page and how would you improve it&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Explain how to scale from a single 5 user database to a 50 user, 500 user, 5000 user and then 5 million user database and explain how to overcome each hurdle.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Design a hybrid solutions for an enterprise customer that needs to store files online in a private cloud with 99.95% SLA and specify which AWS component you will need to use and details about security, access control etc  (Answer) Tech questions are “easier” but I think a minimum knowledge of AWS and how to architect cloud solutions is required for this role, although I heard a few people saying that no pre knowledge of AWS is required for some roles. Anyway, if you want to work with AWS or be a good professional no matter what provider pls do your homework: signup for a AWS certification courses (a cloud guru, LinuxAcademy, Udemy, edx, LinkedIn Training etc) look at AWS SA blogs, white papers, AWS training and Reinvent on youtube, case studies and examples on LinkedIn presentation and &lt;em&gt;practice&lt;/em&gt; on the console before trying to pass this interview.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;If you collected logs and wanted to store them for 14 days then move them over to permanent storage for a few years how would you do this?&lt;/li&gt;
  &lt;li&gt;How would you analyze objects stored in S3 and share them with users&lt;/li&gt;
  &lt;li&gt;How would a developer make an API friendlier?&lt;/li&gt;
  &lt;li&gt;How would you build a web site?&lt;/li&gt;
  &lt;li&gt;How do you architect a design that is fault tolerant?&lt;/li&gt;
  &lt;li&gt;There is a customer from the relevant domain (for me, it was public sector) that wants to create a site that shows some information, and also, push alerts for the end-users. Expecting Millions of end-users. Describe how to build this application. Consider - security, scalability and availability.&lt;/li&gt;
  &lt;li&gt;How would I optimize a high volume hosted site with slow load times?&lt;/li&gt;
  &lt;li&gt;What options are there for database optimization&lt;/li&gt;
  &lt;li&gt;Describe how you would architect a very critical website on the cloud?&lt;/li&gt;
  &lt;li&gt;How can you optimize data flow over a high bandwidth/high latency&lt;/li&gt;
  &lt;li&gt;Given that you have a content rich E-commerce website, what kind of Storage Tier would you use to support the website?&lt;/li&gt;
  &lt;li&gt;How would you recommend to a developer to adjust their code in order to handle database caching?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;디버깅--트러블-슈팅&quot;&gt;디버깅 &amp;amp; 트러블 슈팅&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Troubleshoot a webpage that can’t access the DB&lt;/li&gt;
  &lt;li&gt;Troubleshoot why you can’t access a webpage server&lt;/li&gt;
  &lt;li&gt;What’s a three tier web page architect,and how do you monitor to see a bottleneck and how do you improve it&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How would you debug a poor-performing data project for an upset client? (Answer 1.) I inquired on what the client was trying to achieve, performed an analysis of the SQL and data schema and recommended corrective actions while explaining the anticipated results. First, you have to define “poor performing”. Then perform a full stack assessment: Are instances optimized for their respective roles in the stack? Load balancing in place? Auto-scaling in place? Throughput? Appropriate type of DB (NoSQL vs. RDB), lots of considerations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;What kind of Metrics would you monitor for the E-commerce website application front-end?&lt;/li&gt;
  &lt;li&gt;Case studies for some random startup running on pre y2k technology stack and now wants to scale with AWS.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What would you do if a web application could not talk to the database? (Answer 1.) Process of elimination, See if any other apps using the database are down. Try to establish if it’s a database server issue. If not I’d move to the firewall and establish port 1521 was open on the database server. If that checked out I would start on the webserver and probably start with rebooting the webserver, since it’s down anyway. Start with the simple stuff and work my way through troubleshooting the webserver, is the webserver running, services started, error logs, etc… (Anwer 2.) I would first verify the database is up, check RDS monitoring to see if anything sticks out. Check the security group of the database to ensure that the port the web app connects to it on has the right source sg/subnets (Answer 3.) I will check if there is any firewall and check ports if they are open&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Debug a broken website in the form a CloudFormation stack&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;소프트웨어-개발--cicd&quot;&gt;소프트웨어 개발 &amp;amp; CI/CD&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How do you write performant Java code?&lt;/li&gt;
  &lt;li&gt;What is Big-O notation?&lt;/li&gt;
  &lt;li&gt;How java compilation works?&lt;/li&gt;
  &lt;li&gt;How JVM compatibility works on various platforms?&lt;/li&gt;
  &lt;li&gt;What are the function of stacks? (POP(), PUSH(), TOP())&lt;/li&gt;
  &lt;li&gt;How would you identify a circular linked list?&lt;/li&gt;
  &lt;li&gt;Difference between bubble sort and merge sort? Given n-million data elements, which would be the best,efficient, and faster sort method? What is the average, best, and worst case performance?&lt;/li&gt;
  &lt;li&gt;What is the difference between JSON and XML? When would you use JSON vs. XML?&lt;/li&gt;
  &lt;li&gt;What is the difference between scripts (i think he meant command line interpreter) and a compiler?&lt;/li&gt;
  &lt;li&gt;What is JSON and why would you use it?&lt;/li&gt;
  &lt;li&gt;java &amp;amp; c&lt;/li&gt;
  &lt;li&gt;what does kernel do&lt;/li&gt;
  &lt;li&gt;Explain the differences between C, C++ and C#&lt;/li&gt;
  &lt;li&gt;OOPS: (Answer) Object-oriented programming (OOP) is a programming paradigm based on the concept of “objects”, which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods. The data is usually hidden from other objects so that the only way to affect the data is through the object’s functions (or methods). It has things like inheritance, abstraction, polymorphism,encapsulation, method overloading/overriding etc..&lt;/li&gt;
  &lt;li&gt;Explain inheritance in object oriented programming.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Write a piece of code to turn a recursive operation into a non recursive one&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;What is continuous integration?&lt;/li&gt;
  &lt;li&gt;Machine learning models&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;cryptography, data replication, type of raid, cloud concepts, data base and some real scenarios, most common problem in database, virtualization concepts, parallelism, some algorithm, top IP concepts, ports, difference between TCP and UDP&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TCP vs UDP , NAS vs SAN , RAID 5 vs 0+1 , Firewalls , Hypervisor , Load Balancer , Containers, Dockers, Puppet Chef , CDN , Map reducer , big data , SQL vs NO SQL , Router , Switch , OSI model , development tools , unix shell scripting , tuning rdbms , running application , tuning I/O , SOA , Continuous Integration , Continuous deployment , Monolithic application , loosely coupled application , Cloud security, Encryption , dedup,&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CI and what that means, JSON vs XML, what is a router?  What is MPLS and describe it? How to speed up a high latency link/high speed link? RAID - software vs hardware? What is RAID 10? How to derive IOPS and what are they? What is dedupe? How does it differ from WAN optimizer? I was asked to describe an HA architecture and how to design it. then a series of questions related to RDBMS vs NoSQL, Big Data, and Security.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SQL vs NoSQL, Latency, Hyper-V, OOP concepts, CDN’s, Containers, Dos and DDos, IPS/IDS, RAID levels, SSD vs Regular Drive&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;customer-related-part&quot;&gt;Customer-Related Part&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;How many 9’s of availability are required?  (Answer) As many 9’s as the customer wants it to be!&lt;/li&gt;
  &lt;li&gt;How do you interact with customers?&lt;/li&gt;
  &lt;li&gt;Did you ever come across a customer that his on-premise solution was not going to work in the cloud?&lt;/li&gt;
  &lt;li&gt;Tell me about a time you missed a deadline. what happened and what did you learn?&lt;/li&gt;
  &lt;li&gt;What do you tell a client when there is no technical solution ?&lt;/li&gt;
  &lt;li&gt;How do you explain what is cloud to a CEO of a company trying to-move to cloud in less than a minute?&lt;/li&gt;
  &lt;li&gt;How would you scale out a customer experiencing high traffic and slow page responses?&lt;/li&gt;
  &lt;li&gt;What if Google decides to host youtube.com on AWS, how do you design your solution?&lt;/li&gt;
  &lt;li&gt;Discuss a situation where you had to convince others.&lt;/li&gt;
  &lt;li&gt;How do you handle security objections about the cloud when dealing with public sector customers?&lt;/li&gt;
  &lt;li&gt;Often times I find I have to take calculated risks, what about you? (Answer) I basically gave an example of how I responsibly made leadership decisions and committed to timelines without having all the information that I needed.&lt;/li&gt;
  &lt;li&gt;You have worked with a lot of cloud projects and products in the XYZ space. You have 45 minutes - impress me.  (Answer) This is an open-ended technical question in which I basically gave a rundown of all the products that I had experience with in the XYZ space and the gotchas as well as knowledge that someone would only know if they had gotten their hands dirty with those products. I had to field a lot of technical questions during my response. They are testing if you can soundly advise a client in that space.&lt;/li&gt;
  &lt;li&gt;worked with change control software&lt;/li&gt;
  &lt;li&gt;How you challenge an existing process?&lt;/li&gt;
  &lt;li&gt;How do you sell cloud to a compliance group?&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;behaviour-part&quot;&gt;Behaviour Part&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Why do you want to work for AWS and why as a Solutions Architect?&lt;/li&gt;
  &lt;li&gt;Describe a time when you disagreed with a management decision and how you expressed your opinion. What were the results?&lt;/li&gt;
  &lt;li&gt;Explain an instance of a challenging situation at your current job and what was the resolution?&lt;/li&gt;
  &lt;li&gt;Tell me of a time when you had to disagree with your manager because you knew it wasn’t the best solution for the customer.&lt;/li&gt;
  &lt;li&gt;Now one of your success and what you learned from it.&lt;/li&gt;
  &lt;li&gt;How do you know that you are right?&lt;/li&gt;
  &lt;li&gt;Why do you think you will to fit for this job?&lt;/li&gt;
  &lt;li&gt;Explain how did you show your leadership skills in absence of your manager&lt;/li&gt;
  &lt;li&gt;What was a difficult situation in the work place and how you handled it?&lt;/li&gt;
  &lt;li&gt;Tell me about a time when you knew you were going to miss a deadline and how you managed it&lt;/li&gt;
  &lt;li&gt;Why a solutions architect?&lt;/li&gt;
  &lt;li&gt;Tell me a situation when you had to assume risks&lt;/li&gt;
  &lt;li&gt;Tell me about a technical engagement you did that you are very proud of.&lt;/li&gt;
  &lt;li&gt;Tell me about a time where you disagreed with your manager?&lt;/li&gt;
  &lt;li&gt;What is the biggest mistake you have made?&lt;/li&gt;
  &lt;li&gt;Give me a situation where you couldn’t solve an issue? nice vague open ended BS question.&lt;/li&gt;
  &lt;li&gt;Explain a time you overcame adversity in school or in the workplace.&lt;/li&gt;
  &lt;li&gt;Example of an experience where I had to make a difficult decision and how I approached the situation.&lt;/li&gt;
  &lt;li&gt;a two-page writing sample on your choice of topics: either something that you’ve innovated or a risk that you’ve taken that paid off&lt;/li&gt;
  &lt;li&gt;Of the 14 principles which one do you relate with mostly and use at work, Which one do you not agree with&lt;/li&gt;
  &lt;li&gt;Tell me about a time when you made a judgement call, and you were wrong.&lt;/li&gt;
  &lt;li&gt;What was the last negative feedback you received from your last boss and how did you handle it?&lt;/li&gt;
  &lt;li&gt;biggest achievements…scripting skills..db skills..customer facing skills&lt;/li&gt;
  &lt;li&gt;Describe a moment in your career where you have changed the management decision&lt;/li&gt;
  &lt;li&gt;What is your biggest experience managing projects?&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;specific-area-or-cloud-service-related&quot;&gt;Specific Area or Cloud Service Related&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Describe the business benefits of cloud computing&lt;/li&gt;
  &lt;li&gt;What is the significance of 53 in route 53 ?&lt;/li&gt;
  &lt;li&gt;Big Data, NoSQL, Database Performance and some Data Modeling etc.&lt;/li&gt;
  &lt;li&gt;Why do they call it Amazon Web Services vs. Amazon Web Hosting?&lt;/li&gt;
  &lt;li&gt;How many nodes a SQL 2016 can support&lt;/li&gt;
  &lt;li&gt;MS SharePoint Farm topology&lt;/li&gt;
  &lt;li&gt;How to host SQL 2015 nodes on AWS&lt;/li&gt;
  &lt;li&gt;From your point of view, what are the relevant responsibilities of an AWS Solution Architect?&lt;/li&gt;
  &lt;li&gt;What AWS products have you worked with?&lt;/li&gt;
  &lt;li&gt;“do you have an AWS account? what do you do with it?”&lt;/li&gt;
  &lt;li&gt;basic terms and components of AWS technology stack&lt;/li&gt;
  &lt;li&gt;Questions about managing web application state between EC2 instances running in an auto scaling group&lt;/li&gt;
  &lt;li&gt;What is Route 53 and what does the number 53 signify?&lt;/li&gt;
  &lt;li&gt;Do you know EMR and Redshift? (Answer)[https://medium.com/@omidvd/when-should-we-use-emr-and-when-should-we-use-redshift-emr-vs-redshift-7328d5a53843]&lt;/li&gt;
  &lt;li&gt;how would you encrypt data in a database on AWS (apparently native encryption options in Oracle and MS SQL is a newly supported AWS feature)&lt;/li&gt;
  &lt;li&gt;What are the steps involved in migrating customer application from Azure cloud to AWS.&lt;/li&gt;
  &lt;li&gt;Technical discussion on the solution submitted underline assignment (SA) Especially on modern application architecture using microservices and serverless architecture. How does Cognito work with modern architecture? (Anwer) Basically, the intention to cover the internal functionally of Cognito, how the user authenticated and authorised&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tip-and-reference&quot;&gt;Tip and Reference&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/goduck2&quot;&gt;쿠버네티스 시작전 네트워크 개념/지식 정리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I would suggest always preparing about “scalability”, “high availability” and security at all tiers. They also concentrated on examples of innovations I had done.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://security.stackexchange.com/questions/9957/can-i-use-a-private-key-as-a-public-key-and-vice-versa&quot;&gt;Private Key vs Public Key&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/tommybee/221829409848&quot;&gt;CORS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/scw0531/221334568848&quot;&gt;NAT 설명&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status&quot;&gt;HTTP 에러 코드&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.quora.com/What-are-the-differences-between-CDN-NAS-and-SAN&quot;&gt;CDN, NAS and SAN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/yjaeseok/soap-rest&quot;&gt;SOAP vs REST&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.getfilecloud.com/blog/an-introduction-to-high-availability-architecture/&quot;&gt;An Introduction to HA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/15759571/iops-versus-throughput&quot;&gt;IOPS vs Throughput&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.naver.com/yoodh0713/221577551875&quot;&gt;MPLS?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://designshack.net/articles/business-articles/4-ways-a-cdn-can-speed-up-your-website/&quot;&gt;How CDN speed up a web&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://designshack.net/articles/business-articles/4-ways-a-cdn-can-speed-up-your-website/&quot;&gt;Linux Firewall&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nicolaswindpassinger.com/osi-reference-model&quot;&gt;OSI Model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.cloud-elements.com/json-better-xml&quot;&gt;Why JSON better than XML&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://terms.naver.com/entry.nhn?docId=816119&amp;amp;cid=42344&amp;amp;categoryId=42344&quot;&gt;Bastion Host&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://egloos.zum.com/genes1s/v/3092290&quot;&gt;NAT gateway vs Bastion Host&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jins-dev.tistory.com/entry/L4-L7-%EB%A1%9C%EB%93%9C%EB%B0%B8%EB%9F%B0%EC%8B%B1Load-Balancing-%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC&quot;&gt;L4 vs L7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://real-dongsoo7.tistory.com/42&quot;&gt;Load Balancer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://caingwiz.tistory.com/29&quot;&gt;Amazon 면접 후기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.rightscale.com/cm/designers_guide/cm-designing-and-deploying-high-availability-websites.html&quot;&gt;HA Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html&quot;&gt;What is docker?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/8-common-data-structures-every-programmer-must-know-171acf6a1a42&quot;&gt;Data Structure 101&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jong Yoon Kim</name></author><category term="interview" /><summary type="html">Job Interview를 위한 System Architecture 및 Cloud Service에 대한 정리</summary></entry><entry><title type="html">엘레베이터 버튼 인식</title><link href="/elevator_buttons_recognition" rel="alternate" type="text/html" title="엘레베이터 버튼 인식" /><published>2020-02-09T00:00:00+09:00</published><updated>2020-02-09T00:00:00+09:00</updated><id>/elevator_buttons_recognition</id><content type="html" xml:base="/elevator_buttons_recognition">&lt;p&gt;병원에 로봇을 납품해보자고 한다. 대표 기능으로 층간 이동이 되었으면 한다는데, 말이 쉽지 해결해야 할 문제가 한두개가 아니다. 그러면서 첫번 째 Technology Challenge는 엘레베이터 버튼을 찾아서 눌러야 하는 거란다. 하… 그냥 엘레베이터 시스템에 통신 보드 하나 달면 될 것을 굳이 사람이랑 똑같이 버튼을 누르는 것으로 해보잔다. 쿨하다고… ㅋㅋㅋ 내눈엔 그저 대표적인 오버엔지니어링 케이스. 가격 대비, 기술력 대비 어느 하나 장점이 없다고, 한 시간을 못하는 영어로 설명했지만, 듣는자에게 귀가 없고, 눈도 없다. 앵무새 몇 마리가 동어 반복을 되뇌일 뿐이다. 나같은 일개 연구원 따위의 말은 동서고금을 막론하고 개(?)소리일 뿐…&lt;/p&gt;

&lt;p&gt;어째든 엘레베이터 버튼 인식이 요즘 세상에서는 기술적으로 난이도 그리 있는게 아니다. 구글 형님이 만들어 논 &lt;strong&gt;Tensorflow Detection API&lt;/strong&gt;에다가 모아놓은 데이터를 버무려 주면, 비전/이미지 전공 지식도 필요 없이 한방에 빵! ㅋㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;여기 설명 해놓은 모든 내용은 &lt;a href=&quot;https://github.com/supertigim/elevator_buttons_recognition&quot;&gt;github.com/supertigim/elevator_buttons_recognition&lt;/a&gt;에 있으니 참고.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Ingredients]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이미 예전에 얼굴 인식과 로봇 충전소 인식을 해봐서 어렵지 않게 접근이 가능했다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;딥러닝 지식 약간&lt;/li&gt;
  &lt;li&gt;Python 3.7&lt;/li&gt;
  &lt;li&gt;Tensorflow 1.15.2 (GPU 버전으로 해야 Training때 숨 안넘어감)&lt;/li&gt;
  &lt;li&gt;Tensorflow Detection API 읽을 수 있는 영어 실력&lt;/li&gt;
  &lt;li&gt;엘레베이터 패널 이미지 많이&lt;/li&gt;
  &lt;li&gt;Ubuntu 18.04 (다른 OS는 알아서… ㅎㅎㅎㅎ)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[시작]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tensorflow Detection API는 설명서가 아주 잘되어 있다. 특히, 나처럼 특별한 걸 Detection 하고자는 사람들은 위해 따로 친절하게 &lt;a href=&quot;https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/training.html&quot;&gt;Training Custom Object Detector&lt;/a&gt; 섹션이 있기 때문에 이곳을 먼저 살펴 봐야 한다.&lt;/p&gt;

&lt;p&gt;대충 정리 해보면, 어떻게 폴더 트리를 만들고 무슨 툴로 데이터셋을 만들것인지 대한 설명이니 각자의 상황에 맞춰 주면 된다.&lt;/p&gt;

&lt;p&gt;먼저, conda로 작업 환경을 만들어주자.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;amp; conda create -tf detection python=3.7
    &amp;amp; conda activate tf  
    (tf)&amp;amp; mkdir elevator_buttons_recognition &amp;amp;&amp;amp; cd elevator_buttons_recognition
    (tf)elevator_buttons_recognition&amp;amp; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;매뉴얼에 있는 폴더 트리와 똑같이 할 필요는 없다. 나는 아래와 같이 구성했다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    elevator_buttons_recognition  
    ├─ addons           # labelImg 툴 저장 
    ├─ annotations      # lable table하고 training tfrecord파일이 위치하는 곳 
    ├─ models           # tensorflow detection api  
    ├─ images
    │   ├─ test         # validation images
    │   └─ train        # train images
    ├─ test_panel       # 나중에 모델 테스트 할 이미지  
    ├─ frozen_model     # .pb 파일 넣어두는 곳   
    ├─ training         # .config과 training 중에 생기는 파일들이 저장되는 곳 
    └─ README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;[엘레베이터 이미지 모으기]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;참고로, 예전 데이터셋 작업을 하면서 알게 된건 이미지 검색의 정확도는 구글 보다는 마이크로소프트의 &lt;a href=&quot;https://www.bing.com/&quot;&gt;Bing&lt;/a&gt;이 좋다는 것이다. 하지만, 뭘 쓰든 그리 핫(?)한 주제가 아니기 땜에 긁어 모아도 약 100개 정도 밖에 안된다. 그 중에서 다시 이상한 거 몇 개는 버리고 정리를 해서 트레이닝셋으로 70개, Validation용으로 8개 정도만 쓰기로 결정. 너무 적은데, 잘 안되면 더 찾으면 되는거라 일단 이걸로 시작하기로 했다. 당연히 위에 폴더에 맞게 넣어주었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[데이터셋 만들기 - 전처리]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;딥러닝/AI 개발의 시작과 끝은 데이터셋 가공이다. 이게 다라고 보면 된다. 어짜피 모델은 널려 있고, 잘 만들어져 있고, 성능 비교까지 대부분 다 나와 있어서 그 부분에서 수정할 것은 거의 없다. Detection 하고 싶은 이미지에 대한 작업만 해주면 되는 것이다.&lt;/p&gt;

&lt;p&gt;사용한 툴은 매뉴얼에 나와 있는 것 처럼 labelImg을 사용했다. 설치와 실행은 다음과 같이 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    (tf)elevator_buttons_recognition$ mkdir addons &amp;amp;&amp;amp; cd addons  
    (tf)elevator_buttons_recognition/addons$ git clone https://github.com/tzutalin/labelImg.git  
    (tf)elevator_buttons_recognition/addons$ cd labelImg  
    (tf)elevator_buttons_recognition/addons/labelImg$ pip install -r requirements ./requirements-linux-python3.txt
    (tf)elevator_buttons_recognition/addons/labelImg$ cd ../..

    # dependacy 라이브러리 설치 
    (tf)elevator_buttons_recognition/addons/labelImg$ sudo apt-get install pyqt5-dev-tools  
    (tf)elevator_buttons_recognition/addons/labelImg$ sudo pip3 install -r requirements/requirements-linux-python3.txt  
    (tf)elevator_buttons_recognition/addons/labelImg$ make qt5py3  
    pyrcc5 -o libs/resources.py resources.qrc  

    # 실행  
    (tf)elevator_buttons_recognition/addons/labelImg$ python labelImg.py  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행이 정상적으로 되면 아래와 같은 화면이 뜨고, “Open Dir”를 눌러서 이미지가 있는 폴더를 설정 하면 모든게 끝! 사용은 간단한데 오른쪽 “Create\nRectBox”를 클릭하고 인식하고자 하는 버튼에 사각형 그리고 “button”이라고 레이블 해주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/labelImg_ex.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이미지 마다 작업이 끝나면 꼭 저장을 해줘야 한다. 같은 폴더에 xml파일로 저장이 된다. 이게 정말 시간이 많이 걸린다. 하다보면 화도 날꺼다. ㅎㅎㅎㅎ 사실 100장 이상 더 찾을 수 있었지만, 심신의 건강을 위해 적당한 선에서 멈췄다. 대충 100장 하는데 하루 걸림.&lt;/p&gt;

&lt;p&gt;참고로 레이블링 할때, 몇층인지 보여주는 표시도 “sign”으로 같이 했다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[데이터셋 만들기 - 후처리]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tensorflow Detection API를 쓰려면 xml을 tf-record 형태로 변경을 해주어야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    # tensorflow detection API 다운로드 
    (tf)elevator_buttons_recognition$ git clone https://github.com/tensorflow/models.git

    # protobuf 설치 해야함 
    (tf)elevator_buttons_recognition$ sudo apt-get install protobuf-compiler
    (tf)elevator_buttons_recognition$ cd models/research
    
    # 요건 한번만 해주면 됨 
    (tf)elevator_buttons_recognition/models/research$ wget -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip
    (tf)elevator_buttons_recognition/models/research$ unzip protobuf.zip
    (tf)elevator_buttons_recognition/models/research$ protoc object_detection/protos/*.proto --python_out=.
    
    # 터미널 창 열 때 마다 해주어~!
    (tf)elevator_buttons_recognition/models/research$ export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 내용은 conversion tool을 쓰기 위해 환경 설정을 해준 것이고, 매뉴얼에 따라 xml –&amp;gt; csv를 하고 csv –&amp;gt; .record로 변경 해준다. file들은 매뉴얼에 있는 것 같다 복사 &amp;amp; Paste로 만든거다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    # Convert xml to csv 
    (tf)elevator_buttons_recognition$ python xml_to_csv.py -i ./images/train/ -o ./annotations/train_labels.csv
    (tf)elevator_buttons_recognition$ python xml_to_csv.py -i ./images/test/ -o ./annotations/test_labels.csv

    # Convert .csv to .record
    (tf)elevator_buttons_recognition$ python generate_tfrecord.py --csv_input=./annotations/train_labes.csv --output_path=./annotations/train.record --img_path=images/train/
    (tf)elevator_buttons_recognition$ python generate_tfrecord.py --csv_input=./annotations/test_labes.csv --output_path=./annotations/test.record --img_path=images/test/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음으로는 트레이닝과 모델 Frozen 인데, 이 내용도 다 매뉴얼에 있다. 혹시나 해서 말해두지만, training은 무조건 GPU로 하자. 100장을 200,000 에폭 했더니 GPU를 썼음에도 2-3시간 걸렸다.&lt;/p&gt;

&lt;p&gt;그리고, tensorflow gpu 설치는 &lt;a href=&quot;https://www.tensorflow.org/install/gpu&quot;&gt;공홈 GPU 서포트&lt;/a&gt; 사이트에 있는 ubuntu 18.04를 참고해서 하자. 무시하고 했다가 2시간 날렸음. 아래의 파일들도 매뉴얼에 다 나와 있음.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    # 트레이닝    
    (tf)elevator_buttons_recognition$ python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_inception_v2_coco.config

    # (Optional) 텐서 보드로 상태 확인  
    (tf)elevator_buttons_recognition$ tensorboard --logdir=training

    # .pb file로 변경: model.ckpt 파일들과 checkpoint 있어야 함 
    (tf)elevator_buttons_recognition$ python freeze_model.py --input_type image_tensor --pipeline_config_path ./training/ssd_inception_v2_coco.config --trained_checkpoint_prefix ./training/model.ckpt-87666 --output_directory ./training
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;생성한 pb파일은 frozen_model 폴더에 옮겨 놓고 (아마 옵션에 있었을텐 안찾아 봤음… 귀차니스트.. -.,-) 아래 파일 실행하면 끝! ㅎㅎㅎ&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    (tf)elevator_buttons_recognition$ python inference.py  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 생각외로 괜찮다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/elevator_button_detection_1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/elevator_button_detection_2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;몇 개 Detection 되지 않은 버튼이 있지만, min_score_thresh 값을 조정 해주면 된다. (default=.5) 근데, 이것보다는 데이터셋을 좀 더 확보하거나 hyper parameters를 조정해서 새로 훈련 하는게 더 좋을 것이다. 어째든, Mission Completed!!!&lt;/p&gt;</content><author><name>Jong Yoon Kim</name></author><category term="technology" /><summary type="html">병원에 로봇을 납품해보자고 한다. 대표 기능으로 층간 이동이 되었으면 한다는데, 말이 쉽지 해결해야 할 문제가 한두개가 아니다. 그러면서 첫번 째 Technology Challenge는 엘레베이터 버튼을 찾아서 눌러야 하는 거란다. 하… 그냥 엘레베이터 시스템에 통신 보드 하나 달면 될 것을 굳이 사람이랑 똑같이 버튼을 누르는 것으로 해보잔다. 쿨하다고… ㅋㅋㅋ 내눈엔 그저 대표적인 오버엔지니어링 케이스. 가격 대비, 기술력 대비 어느 하나 장점이 없다고, 한 시간을 못하는 영어로 설명했지만, 듣는자에게 귀가 없고, 눈도 없다. 앵무새 몇 마리가 동어 반복을 되뇌일 뿐이다. 나같은 일개 연구원 따위의 말은 동서고금을 막론하고 개(?)소리일 뿐…</summary></entry><entry><title type="html">블로그를 다시 깃헙으로</title><link href="/back-to-github" rel="alternate" type="text/html" title="블로그를 다시 깃헙으로" /><published>2020-02-06T00:00:00+09:00</published><updated>2020-02-06T00:00:00+09:00</updated><id>/back-to-github</id><content type="html" xml:base="/back-to-github">&lt;p&gt;한 3년 동안 잘 쓰고 있던 &lt;strong&gt;빗버킷 + 휴고&lt;/strong&gt; 블로그 서비스가 어느 순간 맛이 가더니 이젠 아예 되질 않는다. 에어로빅인가 뭔가 서비스가 붙고 ㅈㄹ 염병을 하더만, 몇 달전부터 https 인증서가 중단이 되고, 며칠 전부턴 그냥 먹통!!! 소스가 날아간게 아닌까 걱정했는데 다행히 bitbuck에 멀쩡이 살아 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://scriptedtea.com/assets/images/posts/jekyll_pages.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그래서 다시 github.io와 지킬 조합으로 컴백!!! 시대에 뒤떨어진 UI가 여전히 눈에 거슬리지만, 컨텐츠 정리 및 기록 차원이기에 상관 없다. 천년만년 이대로 있어다오~~ ㅎㅎㅎ&lt;/p&gt;

&lt;p&gt;[Update 2020.02.07] 구린 UI를 그냥 두고 보지 못하고 하루를 홀랑 써서 Theme 업뎃 함. 아~ 만족해~ ㅋㅋ&lt;/p&gt;</content><author><name>Jong Yoon Kim</name></author><category term="life" /><summary type="html">Bitbucket/Hugo 블로그 서비스 망함</summary></entry><entry><title type="html">EV Charging Robot</title><link href="/idea_charging_robot" rel="alternate" type="text/html" title="EV Charging Robot" /><published>2020-01-24T00:00:00+09:00</published><updated>2020-01-24T00:00:00+09:00</updated><id>/idea_charging_robot</id><content type="html" xml:base="/idea_charging_robot">&lt;p&gt;모바일 로봇 관련해서 연구는 하고 있지만, 응용 분야가 생각보다 제한적이다. 돌아다니는거 보면 신기하긴 한데 그래서 뭐? ㅎㅎㅎ 그리고, 기술적으로 해결해야 하는 부분도 많다. 가격도 비싸고.. ㅎㅎㅎ&lt;/p&gt;

&lt;p&gt;암튼 아이디어 하나 생각해 보라 하길래, 전부터 고민하던 EV (Electric Vehicles) 충전 로봇에 대해 썰을 한번 풀어본다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[한줄 요약]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이동 로봇으로 아파트/콘도 같은 집단 거주 건물 내 전기차 충전 서비스 제공&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[아디이어 배경]&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;정부 규제: 국제적 트렌드인 탄소 배출 감소 정책에 맞춰 전기차 보급은 계속 늘어날 것으로 예상&lt;/li&gt;
  &lt;li&gt;전기차 시장 성장세: 최근 테슬라의 발목을 잡았던 대량 생산의 문제점이 드디어 해결되고, 배터리 가격은 지속적으로 하락&lt;/li&gt;
  &lt;li&gt;집단 거주 건물 비율: 주택 선호가 높은 캐나다에서 조차 콘도 거주 비율이 40%가 넘으며, 한국/중국의 경우 대도시의 인구 대부분이 아파트에서 생활&lt;/li&gt;
  &lt;li&gt;충전 시설 미비: 전기차 구매시 가장 큰 고민으로 이 문제가 해결 된다면 자동차 시장의 급격한 트렌드 변화 예상&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[충전 로봇 시장 현황]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;현재까지 대기업 중심으로 시도는 있으나 상용 제품은 나오지 않은 상태&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/Tesla/status/629305813912326146?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E629305813912326146&amp;amp;ref_url=https%3A%2F%2Fwww.engadget.com%2F2015%2F08%2F06%2Fteslas-prehensile-car-charger-plugs-itself-in-automatically%2F&quot;&gt;테슬라 충전 로봇 팔, 2015년 8월&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.etnews.com/20180911000268?obj=Tzo4OiJzdGRDbGFzcyI6Mjp7czo3OiJyZWZlcmVyIjtOO3M6NzoiZm9yd2FyZCI7czoxMzoid2ViIHRvIG1vYmlsZSI7fQ%3D%3D&quot;&gt;삼성C랩, 업계 최초 전기차 충전 로봇 ‘EVAR’ 개발, 2018년 9월&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/JNJ3X6ReQTo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.engadget.com/2019/12/26/vw-ev-charging-robot/&quot;&gt;폭스바겐 충전 로봇 프로토타입 프로젝트, 2019년 11월&lt;/a&gt; &lt;br /&gt;
&lt;img src=&quot;http://www.irobotnews.com/news/photo/201803/13299_31474_742.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[잠재적 고객]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;일단 성공만 한다면 돈많은 클라이언트들이 널리고 널린 시장&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;전기차 회사&lt;/li&gt;
  &lt;li&gt;빌딩 관리 회사&lt;/li&gt;
  &lt;li&gt;주차 관리 회사&lt;/li&gt;
  &lt;li&gt;전기 발전 회사&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[기술적 과제]&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;차량의 충전 위치 파악 및 주유(?) 탭 열기: 제조사 마다 다른 표준 사용시 문제&lt;/li&gt;
  &lt;li&gt;이동 로봇에 충전을 위한 전기 또는 전기 배선 연결: (아이디어) 두대의 로봇을 사용하여 하나는 전기 배선 담당하고 다른 하나는 차량과 연결 부분 담당&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[잠재적 위험 요소]&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기존 내연 기관 차량의 종말로 모든 주차장에 충전 시설 보유: (반박 의견) 모든 파킹 스팟에 충전 시설 설치는 비용 낭비. 충전 및 과금을 위한 극적인 제반 시설의 변화가 필요&lt;/li&gt;
  &lt;li&gt;Working From Home등 사회 환경 변화로 인한 집단 거주지 인기 쇠퇴: (반박 의견) 공영 주차장에서의 서비스 등으로 서비스 다변화 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[Reference]&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.toronto.ca/wp-content/uploads/2019/05/9685-EMS-Assessment-Phase-Final-Project-Report.pdf&quot;&gt;City of Toronto Electric Mobility Strategy Assessment Phase&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blogto.com/city/2019/09/toronto-mayor-plans-eliminate-100-all-greenhouse-gas-emissions/&quot;&gt;Greenhouse Gas Emission Cut&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://emc-mec.ca/new/ev-sales-report-q1-2019-canada-reaches-over-100000-evs/&quot;&gt;Electric Car Market Growth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Condominiums_in_Canada&quot;&gt;People who are Living in Condo in Toronto : 1.478M&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://urbantoronto.ca/news/2019/05/gta-condo-construction-hits-record-high-q1-2019&quot;&gt;Condominium Construction Growth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jong Yoon Kim</name></author><category term="idea" /><summary type="html">모바일 로봇 관련해서 연구는 하고 있지만, 응용 분야가 생각보다 제한적이다. 돌아다니는거 보면 신기하긴 한데 그래서 뭐? ㅎㅎㅎ 그리고, 기술적으로 해결해야 하는 부분도 많다. 가격도 비싸고.. ㅎㅎㅎ 암튼 아이디어 하나 생각해 보라 하길래, 전부터 고민하던 EV (Electric Vehicles) 충전 로봇에 대해 썰을 한번 풀어본다. [한줄 요약]</summary></entry><entry><title type="html">SDE Job Interview 후기</title><link href="/sde_interview_with_a_big_tech_company" rel="alternate" type="text/html" title="SDE Job Interview 후기" /><published>2019-11-09T00:00:00+09:00</published><updated>2019-11-09T00:00:00+09:00</updated><id>/sde_interview_with_a_big_tech_company</id><content type="html" xml:base="/sde_interview_with_a_big_tech_company">&lt;p&gt;정말 가고 싶었던 5대 테크 왕 중 한 회사와의 잡 인터뷰 후기.&lt;/p&gt;

&lt;p&gt;불합격 하긴 했지만, 자질(?)보다는 운이 없었다라고 생각하며 다음을 위해 기록해 둠.&lt;/p&gt;

&lt;p&gt;NDA로 인해 자세한 내용과 회사명을 소개할 수 없지만, 대충 짐작할 수 있지 않나 생각이 든다. ㅎㅎㅎ 전체 채용 과정은 대기업 답게 무난하고 깔끔 했으며, 프로세스가 정형화 되어 있었다. 제일 좋았던 점은 인터뷰 관련 비용을 모두 커버해 주는 것이고, 단점은 프로세스가 길고 마치 채용 공장에 다녀온 느낌? 또 한가지 잡설이지만 미쿡 대기업이라 하더라도 인간적인 실수가 정말 많으므로 중간 중간 확인을 해야 한다.&lt;/p&gt;

&lt;p&gt;보통의 회사와 마찬가지로 입사지원 - HR인터뷰 - 온라인코딩 - 폰인터뷰(난 하지 않았는데, 온라인코딩 결과가 안좋으면 하는듯? 짐작이다) - 온사이트 인터뷰 순으로 진행 된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[코딩 인터뷰 준비]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;제일 까다로운 코딩 인터뷰 준비는 다음 두 유투버의 도움을 가장 많이 받았다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCW4ixpFivk6eJl8b5bFOLkg&quot;&gt;승지니어 Sengineer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UC9a_itvK_850NXybsKxB_gw&quot;&gt;Ricky Cho&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;한달 동안, 무한 반복으로 시청 했으며 풀이 보다는 &lt;strong&gt;생각의 흐름에 집중&lt;/strong&gt; 했다. 두분 다 미쿡에 거주하시는 분들로 승지니어는 현재 구글러이신듯하고, 리키님은 뉴욕에 거주중인듯… 난 시작을 승지니어 채널로 했는데, 후반부에는 리키님 내용을 반복해서 들었다. 이분 말이 느려서 속도를 1.75 나 2 배속으로 해놓고 들으면 꽤 많은 양을 한번에 볼 수 있어 좋았다.&lt;/p&gt;

&lt;p&gt;다음으로 많이 참고한 내용은 릿코드에 있는 &lt;a href=&quot;https://leetcode.com/discuss/interview-experience&quot;&gt;interview experience&lt;/a&gt; 섹션으로 지원 회사 / 지역 등 세분화해서 준비 할 수 있으며, 거의 매일 후기가 올라와서 실전 문제라 생각하고 풀었다.&lt;/p&gt;

&lt;p&gt;코딩 인터뷰 중에 제일 까다로운 건 모두 아시다시피 Dynamic Programming인데, 솔직히 이건 실제 업무에도 그다지 도움 되지 않은듯 하여 미디엄에 있는 &lt;a href=&quot;https://medium.com/.../top-10-dynamic-programming&quot;&gt;top-1- dynamic programming&lt;/a&gt; 아티클를 참고해서 준비 했고, 모르는 문제 나오면 틀리자고 생각했다. 근데, 위 두 유투버도 어느 정도 DP를 다루기 때문에 많은 부분이 커버 된다.&lt;/p&gt;

&lt;p&gt;마지막으로 릿코드 문제 중 임의로 선정하여 하루 2-3개를 풀었다. 꼭 풀려고 노력하기 보다는 15분 내로 해결 안되면 Discussion 섹션으로 가서 제일 추천 많은 풀이 과정을 참고하였다. 여기서도 중요한건 &lt;strong&gt;풀이한 사람의 생각의 흐름을 내 머리에 복사&lt;/strong&gt;한다는 느낌으로 답변을 숙지했다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[디자인 인터뷰 준비]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;나는 실제로 Big Scale의 시스템을 디자인 해본 적도 경험해 본적도 없어 이부분이 제일 문제였고, 실제 불합격의 요인이었다. 구글링을 해보아도 딱히 좋은 솔루션은 없고, 아래 사이트가 답이다라고 언급 하는 정도?? ㅎㅎㅎ&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.educative.io/courses/grokking-the-system-design-interview?aid=5082902844932096&amp;amp;utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=grokking-manual&amp;amp;gclid=Cj0KCQiA-bjyBRCcARIsAFboWg3ora1kJRoJXd5gvXPozzkM62YPZD_ko3tY-W5O4ORwecxkPjJqySQaAn3HEALw_wcB&quot;&gt;Grockking the System Design Interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보고 나면, 어 그래!그래! 하지만 막상 설명을 하려면… 으…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.educative.io/courses/grokking-the-object-oriented-design-interview&quot;&gt;Grockking the OOP Interview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;개인적으로 위의 강의도 도움이 되었다. 둘 다 &lt;strong&gt;유료&lt;/strong&gt;라 진입 장벽이 있지만, 연봉 20만불을 위해 이정도는 투자 하는 걸로 하자!!! ㅋ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[스크리닝 질문]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이미 말했다시피 난 온라인 코딩만 했다. 여기서 받은 질문은 2개이고 난이도는 초-중 이었다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Two Sum 응용&lt;/li&gt;
  &lt;li&gt;Two Pointer 응용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;풀이가 끝나면 영어로 설명을 적어야 한다. 근데 답만 제대로 나왔다면 크게 신경쓰지 않아도 된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[온사이트 인터뷰 질문]&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;온갖 버그로 가득한 클래스를 수정해서 완성 : 파일처리 및 어레이 처리 능숙도 체크, 최적화하라해서 마지막엔 해쉬맵으로 해결&lt;/li&gt;
  &lt;li&gt;바이너리서치트리에서 큰 숫자 k개 : inorder 순회 역순&lt;/li&gt;
  &lt;li&gt;그래프 문제 위상 정렬 응용 : 인바운드 체크&lt;/li&gt;
  &lt;li&gt;우버 시스템 디자인(바 레이저) : 개망했다고 말한것 ㅋㅋ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;모두 화이트 보드에 풀이 해야 한다. 1번의 경우, 나는 C/C++/Python임에도 자바/C#으로 문제를 만들어서 왔다. 어떤 의도인지는 모르겠으나 언어를 초월한(?) 해결 능력을 보여달라는 것 같았다. ㅎㅎㅎ 말로 설명하면서, 모르는 API는 물어봐서 작성.&lt;/p&gt;

&lt;p&gt;4번 우버 시스템 디자인은 사실 전날에도 리뷰 했지만, 실제 해보지 않은걸 뇌피셜로 설명한다는게 여간 힘든게 아니었다. 1시간을 그냥 어버버 하면서 보냈다. ㅠ.ㅠ 만일, 영어가 능숙하다면 구렁이 담 넘어 가듯 해볼 수 있었겠지만, 뭐… 그냥 아쉬웠다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[질문에 따른 예상 솔루션]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;릿코드를 많이 풀다 보면 대충 이렇게 정리가 되는 듯 하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;최대/최소 경우의 수 찾기: &lt;strong&gt;Dynamic Programming&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;모든 경우를 구해라: &lt;strong&gt;백트랙킹&lt;/strong&gt; or &lt;strong&gt;DFS&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;최단거리: &lt;strong&gt;BFS&lt;/strong&gt; or &lt;strong&gt;Heap/Prority Queue&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;o(logn)으로 최적화: &lt;strong&gt;바이너리서치트리&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;o(1)으로 최적화: &lt;strong&gt;해쉬맵&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;어레이/리스트에서 한번 순회로 최적화: &lt;strong&gt;해쉬맵&lt;/strong&gt; or &lt;strong&gt;스택&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;싱글 링크드 리스트 관련: &lt;strong&gt;리버스&lt;/strong&gt; or &lt;strong&gt;walker/runner&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;바이너리서치트리 관련: &lt;strong&gt;리컬전&lt;/strong&gt; or &lt;strong&gt;스택&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[인터뷰 중 문제 받은 후의 생각하는 방법/방향]&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;일단 이해가 가면, 잡단한 질문으로 최대한 시간 끌기. 최적화 하라는게 넘 짜증나서 ㅋㅋ 한번은 시간보다 일찍 끝내니까 백트랙킹 time complexity 찾으라고… 아놔.. -_-;;&lt;/li&gt;
  &lt;li&gt;이해 안가면, &lt;strong&gt;임의로 문제의 입력 값을 2-3 개 만들고, 그 문제의 출력 값을 물어보거나 예상 Output 찾아낸 후 솔루션 도출&lt;/strong&gt;. 이 회사 뿐만 아니라, 지원했던 모든 회사의 모르는 문제는 이 방법으로 다 해결되었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[조언]&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;항상 Time Complexity / Space Complexity는 물어본다. 리컬전의 공간 복잡도는 뭐? ㅎㅎㅎㅎㅎ&lt;/li&gt;
  &lt;li&gt;큰 회사 지원 전에 반드시 작은 회사로 인터뷰 연습을 해본다. 보통 다시 지원하려면 1년 걸린다.&lt;/li&gt;
  &lt;li&gt;여러 회사를 지원 해본 경험 상, 그 어떤 방법을 쓰더라도 솔루션은 도출해야 다음 스테이지로 넘어가는 것으로 보임.&lt;/li&gt;
  &lt;li&gt;항상 최적화 하라고 물어본다. 때문에 처음에는 생각의 흐름을 설명하고 Worst Algorithm으로 문제를 해결, 다음으로 최적화 솔루션으로 다시 작성.&lt;/li&gt;
  &lt;li&gt;화이트보드에 작성할 땐 천천히 하면서 바로 실행해 본다는 생각을 가지고 써야한다. 사진 찍어가는 경우도 있었음.&lt;/li&gt;
  &lt;li&gt;뭐든 말로 설명해야 한다. 그냥 풀이만 하면 떨어짐. 다른 중견 테크 기업 지원 했을때, 2시간 동안 10문제 완.벽.히 다 풀었는데도 탈락했다. 복기 해보니, 솔루션만 설명하고 (ex. 백트랙킹 쓸꺼야) 문제 풀이 중 거의 말을 하지 않았다.&lt;/li&gt;
  &lt;li&gt;영어 준비는 가능하면 많이 하자. 기본적인 CS Fundamentals는 다 영어로 설명 가능해야 한다. 더불어 여러 돌발 상황을 예상하고 답변을 준비해 두면 좋다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jong Yoon Kim</name></author><category term="interview" /><summary type="html">정말 가고 싶었던 5대 테크 왕 중 한 회사와의 잡 인터뷰 후기.</summary></entry><entry><title type="html">캐나에서 2년 생활 회고</title><link href="/two_year_experience_in_canada" rel="alternate" type="text/html" title="캐나에서 2년 생활 회고" /><published>2019-04-22T09:00:01+09:00</published><updated>2019-04-22T09:00:01+09:00</updated><id>/two_year_experience_in_canada</id><content type="html" xml:base="/two_year_experience_in_canada">&lt;p&gt;며칠 전, 오랜 만에 &lt;a href=&quot;https://cafe.naver.com/iliveincan&quot;&gt;캐사사&lt;/a&gt;에 들렀는데, 어느 40대 소프트웨어 개발자분이 캐나다로 오신신다는 글을 보고 한번 다시 정리 해본다.&lt;/p&gt;

&lt;p&gt;생각날때마나 한번씩 하는 것인데 오늘이 그날이다!! ㅎㅎㅎ 이미 1년 회고기는 저 카페에 써놓긴 했는데, 나도 기억 안남! 다시 정리 ㅋㅋ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[결심]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;해외 생활을 결심한 건 두 가지 이유가 있었다.&lt;/p&gt;

&lt;p&gt;하나는 개발자로 나름 잘 지내고 있었으나, 한국에서의 마지막 이직 실패로 잉여의 삶을 사는 것이 너무 무료하였고, 다른 하나는 내가 영어 땜에 지난 몇 십년간 버린 시간/돈의 무게가 만만치 않기에 우리 아이들은 바이링구얼 될 수 있는 기회가 가졌으면 하는 것이었다.&lt;/p&gt;

&lt;p&gt;후보 국가는 뉴질랜드 아니면 캐나다로 가기로 금방 결정이 났다.&lt;/p&gt;

&lt;p&gt;개인적으로는 뉴질랜드를 좀 더 선호했는데, 영주권 취득 후, 2년 정도만 거주하면 평생 영주권이 유지 된다는 이유 때문이었다. 반 공무원인 와이프에겐 참으로 좋은 조건임에도 불구하고, 와이프의 비저항/무협조로 지지 부진하게 진행되었고, 그러던 중 영주권 받을 기회(준비중에 이민 점수 상향)가 날아가게 되면서, 어쩔 수 없이 캐나다로 방향을 틀었다.&lt;/p&gt;

&lt;p&gt;나중에 마눌님께 왜그랬냐 물어봤더니, 벌레 많고, 심심한 섬나라에 가기 싫으시다고… 내가 보기엔 그냥 미쿡 옆에 가고 싶었던 것 같은데~ ㅎㅎ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[준비]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이미 해외 체류 경험이 있어서, 그다지 큰 걱정은 없었다. 그리고, 돌아올 예정이기에 굳이 큰 돈을 써가면서 영주권을 받고 갈 필요도 없어서, 체류 가능한 비자를 알아보게 되었다.&lt;/p&gt;

&lt;p&gt;캐나다는 이쁘게도 컬리지 이상의 대학에서 공부하면, 배우자는 워크퍼밋, 아이들은 임시 체류 비자가 나온다 하여 고민없이 결정하고, 유학원에 의뢰, 수속을 바로 밟았다.  결정 후, 상담-서류준비-학교선정및지원-신체검사-아이엘츠시험-출국 까지는 약 1년 정도가 걸렸는데, 정상적인 생활(?)을 해온 우리 가족에겐 큰 문제는 없었다.&lt;/p&gt;

&lt;p&gt;와이프가 공부하기로 했기에 2년 간 마냥 놀고 싶었으나, 캐나다 대도시 물가가 어마 무시한 관계로 내가 취업해서 돈벌기로 결정을 당했다. ㅠ.ㅠ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[출국 전 취업 준비 - 영어]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이미 한차례 외쿡 생활을 1년 간 했음에도 불구하고, 어마무시한 장애물이 있었으니 바로 영어였다. 기본적으로 한국말도 어버버한 내게 있어서 영어는 커다란 문제였다. 솔직히 말해서 개발자 중에 말 잘하는 인간 몇 되겠냐고… ㅠ.ㅠ (물론 혀그래머 제외!!) 어째든 준비가 필요 하다는 사실은 변하지 않고 있었음에도 불구하고 반년동안 전혀 발전이 없었다. 결국, 와이프가 선발대로 2달 먼저 캐나다로 떠나고 깨달았다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;한국에서는 죽었다 깨어나도 영어 준비가 안된다.  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;일단, 외국어 습득이 원할한 나이가 지났으며, 와이프가 휴직 전 회사일로 반년을 까맣게 불태우셔서 혼자 살다시피 했기에 아이 둘 육아와 회사 일, 출국 전 처리해야 하는 일 등으로 거의 짬이 나지 않았다.&lt;/p&gt;

&lt;p&gt;결국, 생각한 것이 “딱 하나만 준비하자” 였다. 리딩은 어느 정도 되고, 라이팅은 인터넷이 해결해 줄테니, 리스닝에 집중하기로 했다. 나름 논리적으로 판단한건데, 이유는 지원을 하고 폰스크린이라는 것을 할때, 알아듣지 못하면 전화기 너머로 정적만 전달하거나 “아임쏘리” 무차별 콤보를 시전할게 뻔하기 때문이었다.&lt;/p&gt;

&lt;p&gt;리스닝도 첨엔 무작정 미드 같은 거 보면서 듣다가 목표가 폰인터뷰라는 것을 상기하고 인터뷰 관련 내용의 유투브 위주로 찾아봤다. 그 중 제일 도움 되었던 것이 &lt;a href=&quot;https://www.youtube.com/playlist?list=PLI1t_8YX-ApvMthLj56t1Rf-Buio5Y8KL&quot;&gt;Cracking the Coding Interview&lt;/a&gt; 저자가 하는 방송이었다. 정확한 발음에 어떻게 코드를 설명하면 되는지 알게 되었고, 인터뷰 요령과 질문들을 미리 체험할 수 있었기에 자막으로 한번 듣고, 없이 듣고 계속 반복하면서 청취 했다.&lt;/p&gt;

&lt;p&gt;폰인터뷰는 보통 네이티브가 하기 때문에 이상한 엑센트/발음 걱정은 하지 않아도 된다. 행여 폰 인터뷰어 발음이 이상하면, 가지 말아야 할 회사이거나, 구글같은 드림 회사이다. ㅎㅎㅎㅎ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[출국 전 취업 준비 - 개발관련]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;개발자 커리어가 망가진 상태이기 때문에 어떻게 하든 없는 실력을 증명 해야할 필요가 있었다.&lt;/p&gt;

&lt;p&gt;제일 먼저 한 것이 GitHub에 포트폴리오 작성이었다. 때마침 시작한 리서치 프로젝트에 코드 개발 및 데모가 필요하다하여 자원하였고, 해당 프로젝트에서 했던 리서치 및 연습한 코드를 깃헙에 올렸다. 덧붙여서 예전에 회사에서 작성한 것 중에 쓸만한 유물(?)들을 찾아 같이 올렸다. 물론, 너무 티나게 깔끔하게 정리하지는 않았고, 얘가 개발은 할 줄 알겠구나 하는 정도로 정리해서 커밋을 했다.&lt;/p&gt;

&lt;p&gt;그리고, 유튜브에도 1년 전부터 프로젝트의 일부(문제가 되지 않을 만큼)를 촬영해서 올렸다.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/pdkdsPV1m_I&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;[출국, 입국 그리고 정착]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;직장 동료 중 캐나다 시민권자가 있어 많은 도움을 받았다. 특히, 하우스 렌팅을 위해 에이전트를 소개시켜 줬는데, 초기 정착에 많은 도움을 주셨다.&lt;/p&gt;

&lt;p&gt;랜딩 지역은 와이프 학교 때문에 토론토로 이미 정해졌고, 렌트비 범위와 학교 근처로 콘도를 요청 했는데, 때마침 새로 지어진 데가 있어서 와이프가 도착하자마자 바로 계약서 쓰고 입주하고 처리가 끝났다.&lt;/p&gt;

&lt;p&gt;이게 별것 아닌것 같지만, 한국과 달리 집주소가 없으면 어떤 것도 할 수 없는 캐나다에서는 거주할 집을 큰 고생없이 구했다는건 정말 큰 행운이었다. 거기다 캐나다에서 월세를 구하려면 집 주인이 로컬 크레딧(은행기록, 직장 등)을 요구하는데, 에이전트께서 보증을 해주어 큰 어려움이 해결했다. 만세~!!!&lt;/p&gt;

&lt;p&gt;사실, 여기까진 와이프 겪은 쉬운(?) 일이고, 난 남은 아이 둘과 200Kg 넘는 짐 보따리 짊어지고 출국/입국을 하게된다. 전날, 전세를 빼고, 짐을 지인들에게 버리고, 전세금은 은행에 넣은 후 영문 잔고 증명을 떼고, 마지막 영문 주민등록 등본을 떼고, 아이 학교에 부모 동반 해외 이주서류 작성하고, 회사에 영문서류 받고, 개인 짐 빼고, 타던 차를 팔고, 부모님과 작별인사를 하고 등등 이런건 뭐 하는 김에 했다…. 하…….&lt;/p&gt;

&lt;p&gt;출국 전 날, 이 모든걸 마친 후 공항 열차를 타고 가는데 어찌나 힘이 들던지 ㅎㅎ 어째든 이것도 이사라서 정말 많은 짐을 버렸음에도 엄청난 것들이 내 손과 등에 달라붙어서 캐나다 갈 준비를 하고 있었다.&lt;/p&gt;

&lt;p&gt;다음 날 아침 비행기라서 당일 새벽에 가도 되지만, 그 많은 짐과 아이들을 데리고 새벽에 갈 자신이 없어, 공항의 트랜짓 호텔에서 하루 묶었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://img.etnews.com/news/article/2018/01/25/cms_temp_article_25141556347898.jpg&quot; alt=&quot;워커힐 트랜짓 호텔&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이쁘게 자는 아이들 모습과 약간의 긴장에 하루 밤을 잔듯 만듯 보내고 대한항공 토론토 행 비행기(약 14시간)를 탔다. 쩝~ 나중에 안 사실인데, 혼자 아이 둘 이상을 데리고 대한항공을 이용하면 &lt;a href=&quot;https://m.blog.naver.com/PostView.nhn?blogId=kookjin2000&amp;amp;logNo=220186905731&amp;amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F&quot;&gt;한가족 서비스&lt;/a&gt; 대상이라 많은 도움을 받을 수 있다고 한다. 출발지가 외국이어도 가능하단다. 잊지말자!!!&lt;/p&gt;

&lt;p&gt;내용이 너무 길어서 다음에 더 정리하겠음~ To be continued…&lt;/p&gt;</content><author><name>Jong Yoon Kim</name></author><category term="abroad" /><summary type="html">며칠 전, 오랜 만에 캐사사에 들렀는데, 어느 40대 소프트웨어 개발자분이 캐나다로 오신신다는 글을 보고 한번 다시 정리 해본다.</summary></entry><entry><title type="html">분산 메시지 브로커 Kafka 설치 및 간단한 예제</title><link href="/kafka_setup_examples" rel="alternate" type="text/html" title="분산 메시지 브로커 Kafka 설치 및 간단한 예제" /><published>2019-04-11T09:00:01+09:00</published><updated>2019-04-11T09:00:01+09:00</updated><id>/kafka_setup_examples</id><content type="html" xml:base="/kafka_setup_examples">&lt;p&gt;카프카를 알게 된지 수년이 지났는데, 드디어 써보게 되었다. 물류 시스템에 들어가는 멀티 로봇 제어 시스템에서 쓸 예정이다. 알다시피 2-3 대의 소수 로봇 제어에서는 이런 독립 메시징 시스템 없이도 간단히 가능하다. 그런데, 원대한 시스템을 꿈꾸는 이가 있어서 구색을 맞춰주기 위해 한번 검토 해보았다.&lt;/p&gt;

&lt;p&gt;여기의 모든 예제와 설명은 우분투 16.04 기준으로 작성되었다.&lt;/p&gt;

&lt;h1 id=&quot;docker&quot;&gt;Docker&lt;/h1&gt;

&lt;p&gt;요즘 왠만한 툴/시스템은 도커 이미지도 제공한다. OS에 맞춰 설치 하지 않아도 되는건 크나큰 장점이 아닐수 없다. 물론 도커는 설치해야 하지만… ㅎㅎㅎ&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ sudo apt-get remove docker docker-engine docker.io  
    $ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install apt-transport-https ca-certificates curl software-properties-common  
    $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  
    $ sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
    $ sudo apt-get update &amp;amp;&amp;amp; sudo apt-cache search docker-ce

    docker-ce - Docker: the open-source application container engine

    $ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install docker-ce docker-compose
    $ sudo usermod -aG docker $USER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;카프카-실행&quot;&gt;카프카 실행&lt;/h1&gt;

&lt;p&gt;깃허브에서 오픈소스 가져오는거 비슷하게 카프카 도커 이미지를 가져온다. 이건 도커 시스템 어딘가에 저장되기 때문에 어디서 실행하든 상관없다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ docker pull wurstmeister/kafka
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음으로 간단히 실행할 수 있게 정리해 둔 소스코드(설정/스크립트)를 가져온다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ git clone https://github.com/wurstmeister/kafka-docker.git
    $ cd kafka-docker 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;연습으로 로컬에서 구동하는 것이기에 docker-dompose-single-broker.yml에서 KAFKA_ADVERTISED_HOST_NAME를 &lt;strong&gt;127.0.0.1&lt;/strong&gt;롤 변경 해준다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    # 실행 
    $ docker-compose -f docker-compose-single-broker.yml up

    # 정지 (다른창에서)
    $ docker-compose stop   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이걸로 구동완료!! 로그를 보고 있자면, 뭔지는 모르겠으나 주키퍼와 카프카가 사이좋게 메시지 뽑아내면서 잘 동작한다고 나온다.&lt;/p&gt;

&lt;h1 id=&quot;테스트&quot;&gt;테스트&lt;/h1&gt;

&lt;p&gt;개발 언어로 연습해 보기 전에 카프카 바이너리 릴리즈에 있는 스크립트로 동작을 확인 할 수 있다.&lt;/p&gt;

&lt;p&gt;먼전 지금 구동 중인 카프카/스칼라 버전을 확인한다. Dockerfile 파일을 열어보면 다음과 같이 나오는데,&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ARG kafka_version=2.2.0  
ARG scala_version=2.12  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 경우, &lt;strong&gt;kafka_2.12-2.2.0.tgz&lt;/strong&gt;를 파일을 &lt;a href=&quot;http://archive.apache.org/dist/kafka/&quot;&gt;http://archive.apache.org/dist/kafka/&lt;/a&gt;에 가서 받으면된다.&lt;/p&gt;

&lt;p&gt;압축을 해제하고,&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ tar xzvf kafka_2.12-0.10.2.0.tgz  
    $ cd kafka_2.12-0.10.2.0  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;토픽을 만든다. 토픽은 Producer와 Consumer가 메시지를 주고 받을수 있게하는 채널/식별자 같은 것이다. 레플리케이션이나 파티션 등은 여기서 다루지 않겠다. 연습용이니까~ ㅎㅎ&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test_topic  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음, 새로운 터미널을 열고 컨슈머를 실행한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ cd kafka_2.12-0.10.2.0
    $ ./bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test_topic --from-beginning
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;새로운 터미널을 열고 프로듀서를 실행한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ cd kafka_2.12-0.10.2.0  
    $ ./bin/kafka-console-producer.sh --broker-list localhost:9092 --topicc test_topic  

    # 터미널에 글자를 입력하고 엔터를 치면, 컨슈머 터미널에서 전송된걸 확인할 수 있다.  
    # 근데, 1초 정도 늦게 반응한다. (왜?)  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;파이썬-프로듀서-예제&quot;&gt;파이썬 프로듀서 예제&lt;/h1&gt;

&lt;p&gt;파이썬으로 카프카 클라이언트 개발하기 위한 모듈은 몇가지 옵션이 있으나, 조사 결과 confluent-kafka가 제일 속도가 빠르다고 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.popit.kr/wp-content/uploads/2016/07/kafka_python-600x346.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;래빗MQ 대신 카프카 쓰는 이유가 속도인데 당연히 빠른 놈으로 고고~&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    # Python 3.7에서만 테스트 해봄  
    $ pip install confluent-kafka   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;테스트를 위해 &lt;a href=&quot;https://github.com/confluentinc/confluent-kafka-python/blob/master/examples/producer.py&quot;&gt;producer.py&lt;/a&gt; 가져온다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ python producer.py localhost:9092 test_topic  
    # 터미널 글자를 입력하고 엔터를 누르면 된다.  
    # 실시간으로 전송되는 것을 컨슈머 터미널에서 확인 할 수 있다.   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;c-프로듀서-예제&quot;&gt;C++ 프로듀서 예제&lt;/h1&gt;

&lt;p&gt;언제나 처럼 씨뿔뿔은 복잡하고 으렵다 ㅎㅎㅎ&lt;/p&gt;

&lt;p&gt;먼저, 카프카 라이브러리를 설치해야 한다. sudo apt-get를 이용해서는 하지말고 소스로 설치해야 이후 C++래퍼 라이브러리가 정상으로 동작한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ git clone https://github.com/edenhill/librdkafka.git

    $ cd librdkafka   
    $ ./configure  
    $ make  
    $ sudo make install  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음으로 C++래퍼 라이브러리(cppkafka) 설치하자. boost와 cmake가 이미 설치되어 있어야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ git clone https://github.com/mfontanini/cppkafka.git
    
    $ cd cppkafka  
    $ mkdir build  
    $ cd build  
    $ cmake ..  
    $ make   
    $ sudo make install  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;C++ 래퍼 라이브러리 소스코드에 examples 폴더가 있는데 프로듀서 예제가 있다. 근데, 사용전에 CMakeLists.txt를 좀 수정해줘야 한다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION 3.9)
FIND_PACKAGE(Boost COMPONENTS program_options REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

set(CMAKE_CXX_FLAGS &quot;-std=c++11 -Wall&quot;)
SET(CMAKE_EXE_LINKER_FLAGS &quot;${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath -Wl,/usr/local/lib&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 내용을 맨 위에 넣어 주고 다음 실행하자.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    $ cd cppkafka/examples/
    $ mkdir build
    $ cd build
    $ cmake ..
    $ make producer 

    $ ./producer -b localhost:9092 -t test_topic
    # 터미널 글자를 입력하고 엔터를 누르면 된다.  
    # 실시간으로 전송되는 것을 컨슈머 터미널에서 확인 할 수 있다. 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;자바스크립트-프로듀서-예제&quot;&gt;자바스크립트 프로듀서 예제&lt;/h1&gt;

&lt;p&gt;To-be Updated&lt;/p&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.popit.kr/kafka-python-client-%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8/&quot;&gt;파이썬 카프카 클라이언트 비교&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@dokkl2323/kafka-47c7b785c65f&quot;&gt;로컬에서 kafka 실행하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.popit.kr/author/peter5236&quot;&gt;카카오 Kafka운영 담당자의 글 모음&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jong Yoon Kim</name></author><category term="technology" /><summary type="html">카프카를 알게 된지 수년이 지났는데, 드디어 써보게 되었다. 물류 시스템에 들어가는 멀티 로봇 제어 시스템에서 쓸 예정이다. 알다시피 2-3 대의 소수 로봇 제어에서는 이런 독립 메시징 시스템 없이도 간단히 가능하다. 그런데, 원대한 시스템을 꿈꾸는 이가 있어서 구색을 맞춰주기 위해 한번 검토 해보았다. 여기의 모든 예제와 설명은 우분투 16.04 기준으로 작성되었다.</summary></entry><entry><title type="html">길찾기 알고리즘</title><link href="/path_finding_algorithms" rel="alternate" type="text/html" title="길찾기 알고리즘" /><published>2019-03-11T09:00:01+09:00</published><updated>2019-03-11T09:00:01+09:00</updated><id>/path_finding_algorithms</id><content type="html" xml:base="/path_finding_algorithms">&lt;p&gt;Autonomous Navigation 부터 Fleet Management 시스템까지 길찾기 알고리즘이 안들어가는데가 없다. 지금까지 검토한 내용 정리 해보자.&lt;/p&gt;

&lt;h1 id=&quot;single-agent-pathfinding&quot;&gt;Single-Agent Pathfinding&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;[A* Algorithm]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이 알고리즘이 소개된건 이미 몇 십년 전이지만, 여전히 대부분의 시스템에서 사용하는 길찾기 알고리즘은 A* 일 것이다. 동작의 핵심은 Heap Queue, 또는 Priority Queue을 사용한 DFS이다. 정렬을 위한 값/코스트는 (현재 위치부터 출발점 까지 거리 + 현재 위치부터 도착점 까지 거리)이며, 유클리디안 또는 맨하턴 방식으로 계산을 하는데, 당연히 맨하턴이 빠르겄지만서도 체감상 뭘 써도 차이는 없는 듯 하다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/AStar/animation.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jfrascon/SLAM_AND_PATH_PLANNING_ALGORITHMS/blob/master/08-PATH_PLANNING/CODE/pp_01_e_astar_question.py&quot;&gt;파이썬으로 작성된 코드&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itmining.tistory.com/66&quot;&gt;한국어로 설명한 블로그&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[Potential Field/Function]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A* 가 다좋은데, 문제가 하나 있다면 최적의 길찾기를 하다 보니, 벽에 딱 붙어가는 경우가 생긴다. 사람이 보기에는 장애물이 없다면 통로의 가운데 지나가는게 보기에 가장 좋기 때문이다. 그런 이유로 장애물 주위에 가중치를 부여해서 A* 의 코스트 값에 더해주면, 좀더 보기 좋은 길찾기가 가능해진다.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/nQtmUH3UCi4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jfrascon/SLAM_AND_PATH_PLANNING_ALGORITHMS/blob/master/08-PATH_PLANNING/CODE/pp_01_f_astar_potential_function_question.py&quot;&gt;A* 와 결합된 Potential Function - 파이썬 코드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[dijkstra Algorithm]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;사용하는 내부 자료 구조 때문에 A* 보다 성능이 좋을수가 없으나, 분산 처리가 가능하다는 매력이 있다. 참고만 하자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/AtsushiSakai/PythonRoboticsGifs/raw/master/PathPlanning/Dijkstra/animation.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/HFapeLxvdNg&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/basecs/finding-the-shortest-path-with-a-little-help-from-dijkstra-613149fbdc8e&quot;&gt;Dijkstra 소개 블로그&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.uic.edu/~ajayk/SelfStabilization.pdf&quot;&gt;CS553 Distributed Algorithms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cs.rit.edu/~ark/winter2012/730/team/1/presentation2.pdf&quot;&gt;Distributed Shortest Paths Algorithms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;multi-agent-pathfinding&quot;&gt;Multi-Agent Pathfinding&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;[WHCA* Algorithm]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A* 에 시간 개념을 도입, 3D 환경에서 동작하게 만든 알고리즘. 적절한 크기의 타임 슬롯(Reservation Table)을 정하면, 무한 루프에 빠지는 일 없이 솔루션을 잘 찾아낸다. 속도는 코드 품질, 로봇의 수, 맵의 복잡도, 시스템 사양에 따라 틀리지만 대체로 좋은 성능을 보여준다. 40x40정도 크기이면 거의 &lt;strong&gt;실시간&lt;/strong&gt;으로 동작한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pdfs.semanticscholar.org/1460/61be1affd4af17b8996f1d0316ad147368f5.pdf&quot;&gt;Complete Algorithms for Cooperative Pathfinding Problems, 2005년&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/igrek51/coop-pathfinder&quot;&gt;자바로 작성된 코드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/DRx-17AHaw4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;[ECBS]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;제일 처음으로 검토한 알고리즘이며, 프로젝트 중반까지도 사용했었으나, 혼잡 상황에서 계산량 증가로 &lt;strong&gt;실시간 길찾기에 문제점이 많아 결국 폐기&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ars.els-cdn.com/content/image/1-s2.0-S0004370214001386-gr014.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/whoenig/libMultiRobotPlanning&quot;&gt;libMultiRobotPlanning - ECBS를 포함한 여러 알고리즘 있음&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[AA-SIPP]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SIPP를 기반으로 Advanced 알고리즘. 허나, 이 계열의 알고리즘은 혼잡 상황에서 로봇 간 Collision이 발생하기 때문에 실제 사용하지는 않았다.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/1Jrye5S0ZV8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/1703.04159.pdf&quot;&gt;Any-Angle Pathfinding for Multiple Agents Based on SIPP Algorithm, 2017년&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/PathPlanning/AA-SIPP-m&quot;&gt;C++ 코드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/AtsushiSakai/PythonRobotics&quot;&gt;Python Robotics, 최고의 로봇 관련 파이썬 예제코드&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jfrascon/SLAM_AND_PATH_PLANNING_ALGORITHMS/tree/master/08-PATH_PLANNING/CODE&quot;&gt;SLAM 및 Path-Planning MOOC 강좌&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.groundai.com/project/path-planning-for-robotic-mobile-fulfillment-systems/1#bib.bib24&quot;&gt;Path Planning for Robotic Mobile Fulfillment Systems&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/PathPlanning/MultiRobotPathFinding-ROS-Gazebo-Demo&quot;&gt;Gazebo로 멀티 로봇 시뮬레이션 구축&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Jong Yoon Kim</name></author><category term="technology" /><summary type="html">Autonomous Navigation 부터 Fleet Management 시스템까지 길찾기 알고리즘이 안들어가는데가 없다. 지금까지 검토한 내용 정리 해보자.</summary></entry></feed>